language: !lang 'javascript'
pattern:
  semgrep: 'new Ajv({...,allErrors: true,...},...)'
  stsearch: 'new Ajv({...allErrors: true...}...)'
locations:
- path: !path 'semgrep-rules/javascript/ajv/security/audit/ajv-allerrors-true.yaml'
  keys:
  - ajv-allerrors-true.0
---
language: !lang 'javascript'
pattern:
  semgrep: new Ajv($H1,...)
  stsearch: new Ajv($_...)
locations:
- path: !path 'semgrep-rules/javascript/ajv/security/audit/ajv-allerrors-true.yaml'
  keys:
  - ajv-allerrors-true.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1 = {...,allErrors: true,...}'
  stsearch: '$_ = {...allErrors: true...}'
locations:
- path: !path 'semgrep-rules/javascript/ajv/security/audit/ajv-allerrors-true.yaml'
  keys:
  - ajv-allerrors-true.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: function(..., $H1, ...) { ... }
  stsearch: function(... $_ ...) { ... }
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sources.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $rootScope
  stsearch: $rootScope
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sources.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $injector.get('$rootScope')
  stsearch: $injector.get('$rootScope')
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sources.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $injector.get('$scope')
  stsearch: $injector.get('$scope')
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sources.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: angular.element(...). ... .$H1($H2)
  stsearch: angular.element(...)... .$_($_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sinks.0.0.0
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = angular.element(...)
    ...
    $H2. ... .$H3($H4)
  stsearch: |-
    $_ = angular.element(...)
    ...
    $_... .$_($_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sinks.0.0.1
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1
  stsearch: $_
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sinks.0.2
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sinks.0.2
- path: !path 'semgrep-rules/javascript/argon2/security/unsafe-argon2-config.yaml'
  keys:
  - unsafe-argon2-config.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sources.0.0
  - detect-child-process.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sources.0.0
  - dynamodb-request-object.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sources.0.1
  - knex-sqli.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sources.0.1
  - mysql-sqli.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/pg-sqli.yaml'
  keys:
  - pg-sqli.sources.0.1
  - pg-sqli.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/sequelize-sqli.yaml'
  keys:
  - sequelize-sqli.sources.0.1
  - sequelize-sqli.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-eval.yaml'
  keys:
  - tainted-eval.sources.0.0
  - tainted-eval.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-response.yaml'
  keys:
  - tainted-html-response.sources.0.1
  - tainted-html-response.sinks.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sources.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sources.0.0
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.0.1
  - js-open-redirect.sources.3.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sinks.0.0.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.0.0
  - express-path-join-resolve-traversal.sinks.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sinks.0.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.3
- path: !path 'semgrep-rules/javascript/express/security/audit/possible-user-input-redirect.yaml'
  keys:
  - unknown-value-in-redirect.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sinks.0.3
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sinks.0.3
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.2.0.1
  - jquery-insecure-selector.0.3.0.1
  - jquery-insecure-selector.0.4.0.2.0
  - jquery-insecure-selector.0.4.0.3.0
  - jquery-insecure-selector.0.4.1.0.0
  - jquery-insecure-selector.0.4.1.1.0
  - jquery-insecure-selector.0.4.1.2.0
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sources.0.0.0.1
  - hardcoded-jwt-secret.sources.0.0.3.1
- path: !path 'semgrep-rules/javascript/lang/correctness/missing-template-string-indicator.yaml'
  keys:
  - missing-template-string-indicator.1
- path: !path 'semgrep-rules/javascript/lang/correctness/useless-assign.yaml'
  keys:
  - useless-assignment.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sources.0.0
  - path-join-resolve-traversal.sinks.0.0
  - path-join-resolve-traversal.sinks.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.8.meta.2
  - prototype-pollution-assignment.9.meta.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.5.meta.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/unknown-value-with-script-tag.yaml'
  keys:
  - unknown-value-with-script-tag.0.0
  - unknown-value-with-script-tag.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.1.meta.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sinks.0.0
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sinks.0.0.0.0
  - detect-eval-with-expression.sinks.0.0.1.0
  - detect-eval-with-expression.sinks.0.0.2.0
  - detect-eval-with-expression.sinks.0.0.3.0
  - detect-eval-with-expression.sinks.0.0.4.0
  - detect-eval-with-expression.sinks.0.0.5.0
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.3.2
  - hardcoded-passport-secret.sources.0.0.5.2
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-arg-injection.yaml'
  keys:
  - playwright-evaluate-arg-injection.2.0.0
  - playwright-evaluate-arg-injection.2.1.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-arg-injection.yaml'
  keys:
  - puppeteer-evaluate-arg-injection.2.0.0
  - puppeteer-evaluate-arg-injection.2.1.0
  - puppeteer-evaluate-arg-injection.2.2.0
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sinks.0.0.1
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.0.0
  - vm2-context-injection.1.1.0
  - vm2-context-injection.1.1.1
  - vm2-context-injection.1.2.1
  - vm2-context-injection.1.3.0
  - vm2-context-injection.1.3.1
  - vm2-context-injection.1.4.0
  - vm2-context-injection.1.4.1
  - vm2-context-injection.1.4.2
  - vm2-context-injection.1.5.0
  - vm2-context-injection.1.6.0
  - vm2-context-injection.1.6.1
  - vm2-context-injection.1.7.0
  - vm2-context-injection.1.7.1
  - vm2-context-injection.1.8.0
  - vm2-context-injection.1.8.1
  - vm2-context-injection.1.8.2
  - vm2-context-injection.1.9.0
  - vm2-context-injection.1.10.0
  - vm2-context-injection.1.10.1
  - vm2-context-injection.1.11.1
  - vm2-context-injection.1.12.0
  - vm2-context-injection.1.12.1
  - vm2-context-injection.1.13.0
  - vm2-context-injection.1.13.1
  - vm2-context-injection.1.13.2
  - vm2-context-injection.1.14.0
  - vm2-context-injection.1.15.0
  - vm2-context-injection.1.15.1
  - vm2-context-injection.1.16.0
  - vm2-context-injection.1.16.1
  - vm2-context-injection.1.17.0
  - vm2-context-injection.1.17.1
  - vm2-context-injection.1.17.2
  - vm2-context-injection.1.18.0
  - vm2-context-injection.1.19.0
  - vm2-context-injection.1.19.1
  - vm2-context-injection.1.20.1
  - vm2-context-injection.1.21.0
  - vm2-context-injection.1.21.1
  - vm2-context-injection.1.22.0
  - vm2-context-injection.1.22.1
  - vm2-context-injection.1.22.2
  - vm2-context-injection.1.23.0
  - vm2-context-injection.1.24.0
  - vm2-context-injection.1.24.1
  - vm2-context-injection.1.25.0
  - vm2-context-injection.1.25.1
  - vm2-context-injection.1.26.0
  - vm2-context-injection.1.26.1
  - vm2-context-injection.1.26.2
  - vm2-context-injection.1.27.0
  - vm2-context-injection.1.28.0
  - vm2-context-injection.1.28.1
  - vm2-context-injection.1.29.1
  - vm2-context-injection.1.30.0
  - vm2-context-injection.1.30.1
  - vm2-context-injection.1.31.0
  - vm2-context-injection.1.31.1
  - vm2-context-injection.1.31.2
  - vm2-context-injection.1.32.0
  - vm2-context-injection.1.33.0
  - vm2-context-injection.1.33.1
  - vm2-context-injection.1.34.0
  - vm2-context-injection.1.34.1
  - vm2-context-injection.1.35.0
  - vm2-context-injection.1.35.1
  - vm2-context-injection.1.35.2
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.getTrustedHtml(...)
  stsearch: $sce.getTrustedHtml(...)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sanitizers.0.0.0
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sanitizers.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sanitize(...)
  stsearch: $sanitize(...)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sanitizers.0.0.1
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sanitizers.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: DOMPurify.sanitize(...)
  stsearch: DOMPurify.sanitize(...)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-methods.yaml'
  keys:
  - detect-angular-element-methods.sanitizers.0.0.2
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sanitizers.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: window.location.search
  stsearch: window.location.search
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: window.document.location.search
  stsearch: window.document.location.search
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: document.location.search
  stsearch: document.location.search
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: location.search
  stsearch: location.search
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.0.0.3
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sources.0.0.2
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.2.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $location.search(...)
  stsearch: $location.search(...)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1(...)
  stsearch: $_(...)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.0
  - detect-angular-element-taint.sources.1.0.1
  - detect-angular-element-taint.sources.1.0.2
  - detect-angular-element-taint.sources.1.0.3
  - detect-angular-element-taint.sources.1.0.4
  - detect-angular-element-taint.sources.1.0.5
  - detect-angular-element-taint.sources.1.0.6
  - detect-angular-element-taint.sources.1.0.7
  - detect-angular-element-taint.sources.1.0.8
  - detect-angular-element-taint.sources.1.0.9
  - detect-angular-element-taint.sources.1.0.10
  - detect-angular-element-taint.sources.1.0.11
  - detect-angular-element-taint.sources.1.0.12
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.1.1.1
  - raw-html-concat.sanitizers.1.1.3
  - raw-html-concat.sanitizers.2.1
  - raw-html-concat.sanitizers.3.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-directory-listing.yaml'
  keys:
  - express-check-directory-listing.0.1.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-default-name.1
  - express-cookie-session-default-name.2
  - express-cookie-session-no-secure.1
  - express-cookie-session-no-secure.2
  - express-cookie-session-no-httponly.1
  - express-cookie-session-no-httponly.2
  - express-cookie-session-no-domain.1
  - express-cookie-session-no-domain.2
  - express-cookie-session-no-path.1
  - express-cookie-session-no-path.2
  - express-cookie-session-no-expires.1
  - express-cookie-session-no-expires.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-jwt-not-revoked.yaml'
  keys:
  - express-jwt-not-revoked.1
  - express-jwt-not-revoked.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sanitizers.3.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.1.1.1
  - direct-response-write.sanitizers.1.1.3
  - direct-response-write.sanitizers.2.1
  - direct-response-write.sanitizers.3.1
  - direct-response-write.sanitizers.5.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/md5-used-as-password.yaml'
  keys:
  - md5-used-as-password.sinks.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sanitizers.3.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/unknown-value-with-script-tag.yaml'
  keys:
  - unknown-value-with-script-tag.1
---
language: !lang 'javascript'
pattern:
  semgrep: location.hash
  stsearch: location.hash
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.0.0
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sources.0.0.1
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.2.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: window.location.hash
  stsearch: window.location.hash
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: document.location.hash
  stsearch: document.location.hash
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: location.href
  stsearch: location.href
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.3.0
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sources.0.0.0
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: window.location.href
  stsearch: window.location.href
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.4.0
---
language: !lang 'javascript'
pattern:
  semgrep: document.location.href
  stsearch: document.location.href
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.5.0
  - detect-angular-element-taint.sources.1.0.8.0
  - detect-angular-element-taint.sources.1.0.9.0
---
language: !lang 'javascript'
pattern:
  semgrep: document.URL
  stsearch: document.URL
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.6.0
---
language: !lang 'javascript'
pattern:
  semgrep: window.document.URL
  stsearch: window.document.URL
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.7.0
---
language: !lang 'javascript'
pattern:
  semgrep: $location.absUrl()
  stsearch: $location.absUrl()
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.10.0
---
language: !lang 'javascript'
pattern:
  semgrep: $location.url()
  stsearch: $location.url()
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.11.0
---
language: !lang 'javascript'
pattern:
  semgrep: $location.hash()
  stsearch: $location.hash()
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.1.0.12.0
---
language: !lang 'javascript'
pattern:
  semgrep: $http.$H1(...).$H2(function $H3($H4) {...})
  stsearch: $http.$_(...).$_(function $_($_) {...})
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.data
  stsearch: $_.data
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-element-taint.yaml'
  keys:
  - detect-angular-element-taint.sources.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: $window.location.href = $H1
  stsearch: $window.location.href = $_
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-open-redirect.yaml'
  keys:
  - detect-angular-open-redirect.0
---
language: !lang 'javascript'
pattern:
  semgrep: $window.location.href = "..."
  stsearch: $window.location.href = "..."
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-open-redirect.yaml'
  keys:
  - detect-angular-open-redirect.1
---
language: !lang 'javascript'
pattern:
  semgrep: $sceDelegateProvider.resourceUrlWhitelist([...,'**',...])
  stsearch: $sceDelegateProvider.resourceUrlWhitelist([...'**'...])
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-resource-loading.yaml'
  keys:
  - detect-angular-resource-loading.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sceDelegateProvider.resourceUrlWhitelist([...,$H1,...])
  stsearch: $sceDelegateProvider.resourceUrlWhitelist([...$_...])
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-resource-loading.yaml'
  keys:
  - detect-angular-resource-loading.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sceProvider.enabled(false)
  stsearch: $sceProvider.enabled(false)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-sce-disabled.yaml'
  keys:
  - detect-angular-sce-disabled
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $scope.$H2;
    $sce.trustAsCss($H3);
  stsearch: |-
    $_ = $scope.$_;
    $sce.trustAsCss($_);
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-css.yaml'
  keys:
  - detect-angular-trust-as-css-method.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.trustAsCss($scope.$H1)
  stsearch: $sce.trustAsCss($scope.$_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-css.yaml'
  keys:
  - detect-angular-trust-as-css-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    app.controller(..., function($scope,$sce){
    ...
    });
  stsearch: |-
    app.controller(... function($scope,$sce){
    ...
    });
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-css.yaml'
  keys:
  - detect-angular-trust-as-css-method.1
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-html-method.yaml'
  keys:
  - detect-angular-trust-as-html-method.1
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-js-method.yaml'
  keys:
  - detect-angular-trust-as-js-method.1
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-resourceurl-method.yaml'
  keys:
  - detect-angular-trust-as-resourceurl-method.1
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-url-method.yaml'
  keys:
  - detect-angular-trust-as-url-method.1
- path: !path 'semgrep-rules/javascript/angular/security/detect-third-party-angular-translate.yaml'
  keys:
  - detect-angular-translateprovider-translations-method.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $scope.$H2;
    $sce.trustAsHtml($H3);
  stsearch: |-
    $_ = $scope.$_;
    $sce.trustAsHtml($_);
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-html-method.yaml'
  keys:
  - detect-angular-trust-as-html-method.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.trustAsHtml($scope.$H1)
  stsearch: $sce.trustAsHtml($scope.$_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-html-method.yaml'
  keys:
  - detect-angular-trust-as-html-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $scope.$H2;
    $sce.trustAsJs($H3);
  stsearch: |-
    $_ = $scope.$_;
    $sce.trustAsJs($_);
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-js-method.yaml'
  keys:
  - detect-angular-trust-as-js-method.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.trustAsJs($scope.$H1)
  stsearch: $sce.trustAsJs($scope.$_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-js-method.yaml'
  keys:
  - detect-angular-trust-as-js-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    app.controller(..., function($scope,$sce) {
    ...
    });
  stsearch: |-
    app.controller(... function($scope,$sce) {
    ...
    });
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-method.yaml'
  keys:
  - detect-angular-trust-as-method.sources.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $scope.$H1
  stsearch: $scope.$_
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-method.yaml'
  keys:
  - detect-angular-trust-as-method.sources.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.trustAs(...)
  stsearch: $sce.trustAs(...)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-method.yaml'
  keys:
  - detect-angular-trust-as-method.sinks.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.trustAsHtml(...)
  stsearch: $sce.trustAsHtml(...)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-method.yaml'
  keys:
  - detect-angular-trust-as-method.sinks.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $scope.$H2;
    $sce.trustAsResourceUrl($H3);
  stsearch: |-
    $_ = $scope.$_;
    $sce.trustAsResourceUrl($_);
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-resourceurl-method.yaml'
  keys:
  - detect-angular-trust-as-resourceurl-method.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.trustAsResourceUrl($scope.$H1)
  stsearch: $sce.trustAsResourceUrl($scope.$_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-resourceurl-method.yaml'
  keys:
  - detect-angular-trust-as-resourceurl-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $scope.$H2;
    $sce.trustAsUrl($H3);
  stsearch: |-
    $_ = $scope.$_;
    $sce.trustAsUrl($_);
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-url-method.yaml'
  keys:
  - detect-angular-trust-as-url-method.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $sce.trustAsUrl($scope.$H1)
  stsearch: $sce.trustAsUrl($scope.$_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-angular-trust-as-url-method.yaml'
  keys:
  - detect-angular-trust-as-url-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $translateProvider.translations(...,$H1)
  stsearch: $translateProvider.translations(...$_)
locations:
- path: !path 'semgrep-rules/javascript/angular/security/detect-third-party-angular-translate.yaml'
  keys:
  - detect-angular-translateprovider-translations-method.0
---
language: !lang 'javascript'
pattern:
  semgrep: const $H1 = await axios.request($H2,...)
  stsearch: const $_ = await axios.request($_...)
locations:
- path: !path 'semgrep-rules/javascript/apollo/security/apollo-axios-ssrf.yaml'
  keys:
  - apollo-axios-ssrf.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    Query: {
     $H1(parent, args, context, info) {
     ...
     $H2 = args.$H3
     ...
     async function $H4(...,$H5,...){
     ...
     }
     ...
     return $H6(...,$H7,...)
     }
     }
  stsearch: |-
    Query: {
     $_(parent, args, context, info) {
     ...
     $_ = args.$_
     ...
     async function $_(...$_...){
     ...
     }
     ...
     return $_(...$_...)
     }
     }
locations:
- path: !path 'semgrep-rules/javascript/apollo/security/apollo-axios-ssrf.yaml'
  keys:
  - apollo-axios-ssrf.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('argon2')
  stsearch: $_ = require('argon2')
locations:
- path: !path 'semgrep-rules/javascript/argon2/security/unsafe-argon2-config.yaml'
  keys:
  - unsafe-argon2-config.sources.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{type: ...}'
  stsearch: '{type: ...}'
locations:
- path: !path 'semgrep-rules/javascript/argon2/security/unsafe-argon2-config.yaml'
  keys:
  - unsafe-argon2-config.sources.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.hash(...,$H2)
  stsearch: $_.hash(...$_)
locations:
- path: !path 'semgrep-rules/javascript/argon2/security/unsafe-argon2-config.yaml'
  keys:
  - unsafe-argon2-config.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '{type: $H1.argon2id}'
  stsearch: '{type: $_.argon2id}'
locations:
- path: !path 'semgrep-rules/javascript/argon2/security/unsafe-argon2-config.yaml'
  keys:
  - unsafe-argon2-config.sanitizers.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2('<', '&lt;')
  stsearch: $_.$_('<', '&lt;')
locations:
- path: !path 'semgrep-rules/javascript/audit/detect-replaceall-sanitization.yaml'
  keys:
  - detect-replaceall-sanitization.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2('>', '&gt;')
  stsearch: $_.$_('>', '&gt;')
locations:
- path: !path 'semgrep-rules/javascript/audit/detect-replaceall-sanitization.yaml'
  keys:
  - detect-replaceall-sanitization.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2('"', '&quot;')
  stsearch: $_.$_('"', '&quot;')
locations:
- path: !path 'semgrep-rules/javascript/audit/detect-replaceall-sanitization.yaml'
  keys:
  - detect-replaceall-sanitization.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("'", '&apos;')
  stsearch: $_.$_("'", '&apos;')
locations:
- path: !path 'semgrep-rules/javascript/audit/detect-replaceall-sanitization.yaml'
  keys:
  - detect-replaceall-sanitization.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2('&', '&amp;')
  stsearch: $_.$_('&', '&amp;')
locations:
- path: !path 'semgrep-rules/javascript/audit/detect-replaceall-sanitization.yaml'
  keys:
  - detect-replaceall-sanitization.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    exports.handler = function ($H1, ...) {
     ...
    }
  stsearch: |-
    exports.handler = function ($_ ...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sources.0.1.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sources.0.1.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sources.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sources.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/pg-sqli.yaml'
  keys:
  - pg-sqli.sources.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/sequelize-sqli.yaml'
  keys:
  - sequelize-sqli.sources.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-eval.yaml'
  keys:
  - tainted-eval.sources.0.1.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-response.yaml'
  keys:
  - tainted-html-response.sources.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sources.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sources.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1 ($H2, ...) {...}
    ...
    exports.handler = $H3
  stsearch: |-
    function $_ ($_ ...) {...}
    ...
    exports.handler = $_
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sources.0.1.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sources.0.1.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sources.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sources.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/pg-sqli.yaml'
  keys:
  - pg-sqli.sources.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/sequelize-sqli.yaml'
  keys:
  - sequelize-sqli.sources.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-eval.yaml'
  keys:
  - tainted-eval.sources.0.1.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-response.yaml'
  keys:
  - tainted-html-response.sources.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sources.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sources.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = function ($H2, ...) {...}
    ...
    exports.handler = $H3
  stsearch: |-
    $_ = function ($_ ...) {...}
    ...
    exports.handler = $_
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sources.0.1.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sources.0.1.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sources.0.0.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sources.0.0.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/pg-sqli.yaml'
  keys:
  - pg-sqli.sources.0.0.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/sequelize-sqli.yaml'
  keys:
  - sequelize-sqli.sources.0.0.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-eval.yaml'
  keys:
  - tainted-eval.sources.0.1.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-response.yaml'
  keys:
  - tainted-html-response.sources.0.0.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sources.0.0.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.0.2
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sources.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: exec($H1,...)
  stsearch: exec($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: execSync($H1,...)
  stsearch: execSync($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: spawn($H1,...)
  stsearch: spawn($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: spawnSync($H1,...)
  stsearch: spawnSync($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.exec($H2,...)
  stsearch: $_.exec($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.4
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/shelljs/security/shelljs-exec-injection.yaml'
  keys:
  - shelljs-exec-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.execSync($H2,...)
  stsearch: $_.execSync($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.5
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawn($H2,...)
  stsearch: $_.spawn($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.6
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawnSync($H2,...)
  stsearch: $_.spawnSync($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.7
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: require('child_process')
  stsearch: require('child_process')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.2.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'child_process'
  stsearch: import 'child_process'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.2.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3, ...)
  stsearch: $_.$_($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new $H2.DocumentClient(...)
  stsearch: $_ = new $_.DocumentClient(...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sinks.0.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new $H2.DynamoDB(...)
  stsearch: $_ = new $_.DynamoDB(...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sinks.0.3.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new DynamoDBClient(...)
  stsearch: $_ = new DynamoDBClient(...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sinks.0.3.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = DynamoDBDocumentClient.from(...)
  stsearch: $_ = DynamoDBDocumentClient.from(...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sinks.0.3.3
---
language: !lang 'javascript'
pattern:
  semgrep: '{...}'
  stsearch: '{...}'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/dynamodb-request-object.yaml'
  keys:
  - dynamodb-request-object.sanitizers.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.fromRaw($H2, ...)
  stsearch: $_.fromRaw($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.whereRaw($H2, ...)
  stsearch: $_.whereRaw($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sinks.0.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.raw($H2, ...)
  stsearch: $_.raw($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sinks.0.1.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: require('knex')
  stsearch: require('knex')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sinks.0.2.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'knex'
  stsearch: import 'knex'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/knex-sqli.yaml'
  keys:
  - knex-sqli.sinks.0.2.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.query($H2, ...)
  stsearch: $_.query($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/pg-sqli.yaml'
  keys:
  - pg-sqli.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/sequelize-sqli.yaml'
  keys:
  - sequelize-sqli.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.execute($H2, ...)
  stsearch: $_.execute($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: require('mysql')
  stsearch: require('mysql')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: require('mysql2')
  stsearch: require('mysql2')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: require('mysql2/promise')
  stsearch: require('mysql2/promise')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: import 'mysql'
  stsearch: import 'mysql'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.2.3
---
language: !lang 'javascript'
pattern:
  semgrep: import 'mysql2'
  stsearch: import 'mysql2'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.2.4
---
language: !lang 'javascript'
pattern:
  semgrep: import 'mysql2/promise'
  stsearch: import 'mysql2/promise'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/mysql-sqli.yaml'
  keys:
  - mysql-sqli.sinks.0.2.5
---
language: !lang 'javascript'
pattern:
  semgrep: require('pg')
  stsearch: require('pg')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/pg-sqli.yaml'
  keys:
  - pg-sqli.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'pg'
  stsearch: import 'pg'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/pg-sqli.yaml'
  keys:
  - pg-sqli.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: require('sequelize')
  stsearch: require('sequelize')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/sequelize-sqli.yaml'
  keys:
  - sequelize-sqli.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'sequelize'
  stsearch: import 'sequelize'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/sequelize-sqli.yaml'
  keys:
  - sequelize-sqli.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: eval($H1)
  stsearch: eval($_)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-eval.yaml'
  keys:
  - tainted-eval.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: Function(...,$H1)
  stsearch: Function(...$_)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-eval.yaml'
  keys:
  - tainted-eval.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: new Function(...,$H1)
  stsearch: new Function(...$_)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-eval.yaml'
  keys:
  - tainted-eval.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., headers: {..., ''Content-Type'': ''text/html'', ...}, body: $H1,
    ... }'
  stsearch: '{... headers: {... ''Content-Type'': ''text/html'' ...}, body: $_ ...
    }'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-response.yaml'
  keys:
  - tainted-html-response.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '"$H1" + $H2'
  stsearch: '"$_" + $_'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sinks.0.0.0.0.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sinks.0.0.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: '"$H1".concat(...)'
  stsearch: '"$_".concat(...)'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sinks.0.0.0.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sinks.0.0.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.format($H2, ...)
  stsearch: $_.format($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sinks.0.0.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: format($H1, ...)
  stsearch: format($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sinks.0.0.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: '`...${...}...`'
  stsearch: '`...${...}...`'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sinks.0.0.1.0
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.8.meta.1
  - prototype-pollution-assignment.9.meta.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.5.meta.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sources.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: console.$H1(...)
  stsearch: console.$_(...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-html-string.yaml'
  keys:
  - tainted-html-string.sinks.0.1
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: util.format($H1, ...)
  stsearch: util.format($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.0.0.2
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sinks.0.0.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: require('vm')
  stsearch: require('vm')
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'vm'
  stsearch: import 'vm'
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInContext($H2,...)
  stsearch: $_.runInContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInNewContext($H2,...)
  stsearch: $_.runInNewContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInThisContext($H2,...)
  stsearch: $_.runInThisContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.compileFunction($H2,...)
  stsearch: $_.compileFunction($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.3
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1.Script($H2,...)
  stsearch: new $_.Script($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.4
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.8
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1.SourceTextModule($H2,...)
  stsearch: new $_.SourceTextModule($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.5
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.9
---
language: !lang 'javascript'
pattern:
  semgrep: runInContext($H1,...)
  stsearch: runInContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.6
---
language: !lang 'javascript'
pattern:
  semgrep: runInNewContext($H1,...)
  stsearch: runInNewContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.7
---
language: !lang 'javascript'
pattern:
  semgrep: runInThisContext($H1,...)
  stsearch: runInThisContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.8
---
language: !lang 'javascript'
pattern:
  semgrep: compileFunction($H1,...)
  stsearch: compileFunction($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.9
---
language: !lang 'javascript'
pattern:
  semgrep: new Script($H1,...)
  stsearch: new Script($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.10
---
language: !lang 'javascript'
pattern:
  semgrep: new SourceTextModule($H1,...)
  stsearch: new SourceTextModule($_...)
locations:
- path: !path 'semgrep-rules/javascript/aws-lambda/security/vm-runincontext-injection.yaml'
  keys:
  - vm-runincontext-injection.sinks.0.1.11
---
language: !lang 'javascript'
pattern:
  semgrep: function ... (..., $H1,...) {...}
  stsearch: function ... (... $_...) {...}
locations:
- path: !path 'semgrep-rules/javascript/bluebird/security/audit/tofastproperties-code-execution.yaml'
  keys:
  - tofastproperties-code-execution.sources.0.0
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sources.0.0
- path: !path 'semgrep-rules/javascript/deno/security/audit/deno-dangerous-run.yaml'
  keys:
  - deno-dangerous-run.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-require.yaml'
  keys:
  - detect-non-literal-require.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sources.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.toFastProperties($H2,...)
  stsearch: $_.toFastProperties($_...)
locations:
- path: !path 'semgrep-rules/javascript/bluebird/security/audit/tofastproperties-code-execution.yaml'
  keys:
  - tofastproperties-code-execution.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: toFastProperties($H1,...)
  stsearch: toFastProperties($_...)
locations:
- path: !path 'semgrep-rules/javascript/bluebird/security/audit/tofastproperties-code-execution.yaml'
  keys:
  - tofastproperties-code-execution.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('bluebird')
  stsearch: $_ = require('bluebird')
locations:
- path: !path 'semgrep-rules/javascript/bluebird/security/audit/tofastproperties-code-execution.yaml'
  keys:
  - tofastproperties-code-execution.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'bluebird'
  stsearch: import 'bluebird'
locations:
- path: !path 'semgrep-rules/javascript/bluebird/security/audit/tofastproperties-code-execution.yaml'
  keys:
  - tofastproperties-code-execution.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: document.write(...)
  stsearch: document.write(...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/dom-based-xss.yaml'
  keys:
  - dom-based-xss.0
  - dom-based-xss.1
- path: !path 'semgrep-rules/javascript/browser/security/insecure-document-method.yaml'
  keys:
  - insecure-document-method.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: document.location.$H1
  stsearch: document.location.$_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/dom-based-xss.yaml'
  keys:
  - dom-based-xss.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: location.$H1
  stsearch: location.$_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/dom-based-xss.yaml'
  keys:
  - dom-based-xss.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: eval("...")
  stsearch: eval("...")
locations:
- path: !path 'semgrep-rules/javascript/browser/security/eval-detected.yaml'
  keys:
  - eval-detected.0
---
language: !lang 'javascript'
pattern:
  semgrep: eval(...)
  stsearch: eval(...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/eval-detected.yaml'
  keys:
  - eval-detected.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sinks.0.0
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.innerHTML = $H2
  stsearch: $_.innerHTML = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insecure-document-method.yaml'
  keys:
  - insecure-document-method.0.0
- path: !path 'semgrep-rules/javascript/browser/security/insecure-innerhtml.yaml'
  keys:
  - insecure-innerhtml.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.outerHTML = $H2
  stsearch: $_.outerHTML = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insecure-document-method.yaml'
  keys:
  - insecure-document-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.innerHTML = "..."
  stsearch: $_.innerHTML = "..."
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insecure-document-method.yaml'
  keys:
  - insecure-document-method.1
- path: !path 'semgrep-rules/javascript/browser/security/insecure-innerhtml.yaml'
  keys:
  - insecure-innerhtml.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.outerHTML = "..."
  stsearch: $_.outerHTML = "..."
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insecure-document-method.yaml'
  keys:
  - insecure-document-method.2
---
language: !lang 'javascript'
pattern:
  semgrep: document.write("...")
  stsearch: document.write("...")
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insecure-document-method.yaml'
  keys:
  - insecure-document-method.3
---
language: !lang 'javascript'
pattern:
  semgrep: window.addEventListener('message', $H1, ...)
  stsearch: window.addEventListener('message', $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: function($H1) { ... }
  stsearch: function($_) { ... }
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.0.1.meta.0
---
language: !lang 'javascript'
pattern:
  semgrep: function($H1) { ... if (...) { ... } ... }
  stsearch: function($_) { ... if (...) { ... } ... }
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.0.1.meta.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.origin
  stsearch: $_.origin
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.0.1.meta.1.0
  - insufficient-postmessage-origin-validation.1.2.meta.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: function $H1($H2) { $H3 }
  stsearch: function $_($_) { $_ }
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = (...) => { $H2 }
  stsearch: $_ = (...) => { $_ }
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: window.addEventListener('message', $H1,...)
  stsearch: window.addEventListener('message', $_...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: '... if (...) { ... } ...'
  stsearch: '... if (...) { ... } ...'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/insufficient-postmessage-origin-validation.yaml'
  keys:
  - insufficient-postmessage-origin-validation.1.2.meta.0
---
language: !lang 'javascript'
pattern:
  semgrep: function ... (..., $H1, ...) { ... }
  stsearch: function ... (... $_ ...) { ... }
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sources.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: location.href = $H1
  stsearch: location.href = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.0
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: window.location.href = $H1
  stsearch: window.location.href = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: this.window.location.href = $H1
  stsearch: this.window.location.href = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: this.location.href = $H1
  stsearch: this.location.href = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: location.replace($H1)
  stsearch: location.replace($_)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.4
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: window.location.replace($H1)
  stsearch: window.location.replace($_)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: this.window.location.replace($H1)
  stsearch: this.window.location.replace($_)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.6
---
language: !lang 'javascript'
pattern:
  semgrep: this.location.replace($H1)
  stsearch: this.location.replace($_)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.0.7
---
language: !lang 'javascript'
pattern:
  semgrep: '"..." + $H1'
  stsearch: '"..." + $_'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.2.meta.0
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.2.meta.0
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sinks.0.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sinks.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: '`...${$H1}`'
  stsearch: '`...${$_}`'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect-from-function.yaml'
  keys:
  - js-open-redirect-from-function.sinks.0.2.meta.1
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.2.meta.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams($H2. ... .location.search).get('...')
  stsearch: $_ = new URLSearchParams($_... .location.search).get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.0.0.0
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams(location.search).get('...')
  stsearch: $_ = new URLSearchParams(location.search).get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.0.0.1
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams($H2. ... .location.hash.substring(1)).get('...')
  stsearch: $_ = new URLSearchParams($_... .location.hash.substring(1)).get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.0.0.2
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams(location.hash.substring(1)).get('...')
  stsearch: $_ = new URLSearchParams(location.hash.substring(1)).get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.0.0.3
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams($H2. ... .location.search)
  stsearch: $_ = new URLSearchParams($_... .location.search)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.1.0.0
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams(location.search)
  stsearch: $_ = new URLSearchParams(location.search)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.1.0.1
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams($H2. ... .location.hash.substring(1))
  stsearch: $_ = new URLSearchParams($_... .location.hash.substring(1))
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.1.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URLSearchParams(location.hash.substring(1))
  stsearch: $_ = new URLSearchParams(location.hash.substring(1))
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.1.0.3
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.1.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.get('...')
  stsearch: $_.get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.1.1
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URL($H2. ... .location.href)
  stsearch: $_ = new URL($_... .location.href)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URL(location.href)
  stsearch: $_ = new URL(location.href)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.2.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.searchParams.get('...')
  stsearch: $_.searchParams.get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URL($H2. ... .location.href).searchParams.get('...')
  stsearch: $_ = new URL($_... .location.href).searchParams.get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.3.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new URL(location.href).searchParams.get('...')
  stsearch: $_ = new URL(location.href).searchParams.get('...')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sources.3.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.href = $H2
  stsearch: $_... .location.href = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.replace($H2)
  stsearch: $_... .location.replace($_)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: location = $H1
  stsearch: location = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location = $H2
  stsearch: $_... .location = $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/open-redirect.yaml'
  keys:
  - js-open-redirect.sinks.0.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.href
  stsearch: $_... .location.href
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sources.0.0.3
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.2.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.hash
  stsearch: $_... .location.hash
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sources.0.0.4
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.2.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.search
  stsearch: $_... .location.search
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sources.0.0.5
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.2.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 + $H2
  stsearch: $_ + $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sinks.0.0.0.0
  - raw-html-concat.sinks.0.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sources.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 + "..."
  stsearch: $_ + "..."
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sinks.0.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sinks.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: '[..., $H1, ...].join(...)'
  stsearch: '[... $_ ...].join(...)'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sinks.0.0.2.0
  - raw-html-concat.sinks.0.0.3.0
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-join.yaml'
  keys:
  - raw-html-join.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 += $H2
  stsearch: $_ += $_
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sinks.0.0.4.0
  - raw-html-concat.sinks.0.0.5.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from "underscore.string"
  stsearch: import $_ from "underscore.string"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.0.0.0
  - raw-html-concat.sanitizers.0.0.2
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.0.0.0
  - direct-response-write.sanitizers.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from "underscore.string"
  stsearch: import * as $_ from "underscore.string"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("underscore.string")
  stsearch: $_ = require("underscore.string")
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.0.0.3
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.escapeHTML(...)
  stsearch: $_.escapeHTML(...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from "dompurify"
  stsearch: import $_ from "dompurify"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import { ..., $H1,... } from "dompurify"
  stsearch: import { ... $_... } from "dompurify"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from "dompurify"
  stsearch: import * as $_ from "dompurify"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.0.2
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("dompurify")
  stsearch: $_ = require("dompurify")
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.0.3
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from "isomorphic-dompurify"
  stsearch: import $_ from "isomorphic-dompurify"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.0.4
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from "isomorphic-dompurify"
  stsearch: import * as $_ from "isomorphic-dompurify"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.0.5
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("isomorphic-dompurify")
  stsearch: $_ = require("isomorphic-dompurify")
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.0.6
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.0.6
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2(...)
  stsearch: $_ = $_(...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-directory-listing.yaml'
  keys:
  - express-check-directory-listing.0.1.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sanitize(...)
  stsearch: $_.sanitize(...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.1.0.1
  - raw-html-concat.sanitizers.1.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.1.0.1
  - direct-response-write.sanitizers.1.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2.sanitize
  stsearch: $_ = $_.sanitize
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.1.1.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.1.1.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'xss'
  stsearch: import $_ from 'xss'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'xss'
  stsearch: import * as $_ from 'xss'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.2.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("xss")
  stsearch: $_ = require("xss")
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.2.0.2
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.2.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'sanitize-html'
  stsearch: import $_ from 'sanitize-html'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.3.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.3.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from "sanitize-html"
  stsearch: import * as $_ from "sanitize-html"
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.3.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.3.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("sanitize-html")
  stsearch: $_ = require("sanitize-html")
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.3.0.2
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.3.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new Remarkable()
  stsearch: $_ = new Remarkable()
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.4.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.4.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.render(...)
  stsearch: $_.render(...)
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-concat.yaml'
  keys:
  - raw-html-concat.sanitizers.4.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.4.1
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.1.3
  - express-insecure-template-usage.sinks.0.2.1.0
  - express-insecure-template-usage.sinks.0.5.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: '[..., "$H1", ...].join("...")'
  stsearch: '[... "$_" ...].join("...")'
locations:
- path: !path 'semgrep-rules/javascript/browser/security/raw-html-join.yaml'
  keys:
  - raw-html-join.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.postMessage(...,'*')
  stsearch: $_.postMessage(...'*')
locations:
- path: !path 'semgrep-rules/javascript/browser/security/wildcard-postmessage-configuration.yaml'
  keys:
  - wildcard-postmessage-configuration
---
language: !lang 'javascript'
pattern:
  semgrep: require('chrome-remote-interface')
  stsearch: require('chrome-remote-interface')
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'chrome-remote-interface'
  stsearch: import 'chrome-remote-interface'
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.compileScript({expression: $H2},...)'
  stsearch: '$_.compileScript({expression: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.evaluate({expression: $H2},...)'
  stsearch: '$_.evaluate({expression: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.navigate({url: $H2},...)'
  stsearch: '$_.navigate({url: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.printToPDF({headerTemplate: $H2},...)'
  stsearch: '$_.printToPDF({headerTemplate: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.printToPDF({footerTemplate: $H2},...)'
  stsearch: '$_.printToPDF({footerTemplate: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.setDocumentContent({html: $H2},...)'
  stsearch: '$_.setDocumentContent({html: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/chrome-remote-interface/security/audit/chrome-remote-interface-compilescript-injection.yaml'
  keys:
  - chrome-remote-interface-compilescript-injection.sinks.0.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: 'Deno.run({cmd: [$H1,...]},...)'
  stsearch: 'Deno.run({cmd: [$_...]}...)'
locations:
- path: !path 'semgrep-rules/javascript/deno/security/audit/deno-dangerous-run.yaml'
  keys:
  - deno-dangerous-run.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: 'Deno.run({cmd: ["...","-c",$H1,...]},...)'
  stsearch: 'Deno.run({cmd: ["...","-c",$_...]}...)'
locations:
- path: !path 'semgrep-rules/javascript/deno/security/audit/deno-dangerous-run.yaml'
  keys:
  - deno-dangerous-run.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: 'Deno.run({cmd: [$H1,"-c",$H2,...]},...)'
  stsearch: 'Deno.run({cmd: [$_,"-c",$_...]}...)'
locations:
- path: !path 'semgrep-rules/javascript/deno/security/audit/deno-dangerous-run.yaml'
  keys:
  - deno-dangerous-run.sinks.0.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = "..."
  stsearch: $_ = "..."
locations:
- path: !path 'semgrep-rules/javascript/deno/security/audit/deno-dangerous-run.yaml'
  keys:
  - deno-dangerous-run.sinks.0.0.2.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.2.1.1
  - dangerous-spawn-shell.sinks.0.2.3.1
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.4
  - detect-child-process.sinks.1.3
- path: !path 'semgrep-rules/javascript/sandbox/security/audit/sandbox-code-injection.yaml'
  keys:
  - sandbox-code-injection.1
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: DOMPurify.sanitize($H1, ...)
  stsearch: DOMPurify.sanitize($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/dompurify.yaml'
  keys:
  - harden-dompurify-usage.0
---
language: !lang 'javascript'
pattern:
  semgrep: 'DOMPurify.sanitize($H1, {RETURN_DOM_FRAGMENT: true})'
  stsearch: 'DOMPurify.sanitize($_, {RETURN_DOM_FRAGMENT: true})'
locations:
- path: !path 'semgrep-rules/javascript/dompurify.yaml'
  keys:
  - harden-dompurify-usage.1
---
language: !lang 'javascript'
pattern:
  semgrep: 'DOMPurify.sanitize($H1, {RETURN_DOM: true})'
  stsearch: 'DOMPurify.sanitize($_, {RETURN_DOM: true})'
locations:
- path: !path 'semgrep-rules/javascript/dompurify.yaml'
  keys:
  - harden-dompurify-usage.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('express')
  stsearch: $_ = require('express')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-csurf-middleware-usage.yaml'
  keys:
  - express-check-csurf-middleware-usage.0
---
language: !lang 'javascript'
pattern:
  semgrep: import {$H1} from 'csurf'
  stsearch: import {$_} from 'csurf'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-csurf-middleware-usage.yaml'
  keys:
  - express-check-csurf-middleware-usage.1
---
language: !lang 'javascript'
pattern:
  semgrep: require('csurf')
  stsearch: require('csurf')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-csurf-middleware-usage.yaml'
  keys:
  - express-check-csurf-middleware-usage.2
---
language: !lang 'javascript'
pattern:
  semgrep: import {$H1} from 'csrf'
  stsearch: import {$_} from 'csrf'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-csurf-middleware-usage.yaml'
  keys:
  - express-check-csurf-middleware-usage.3
---
language: !lang 'javascript'
pattern:
  semgrep: require('csrf')
  stsearch: require('csrf')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-csurf-middleware-usage.yaml'
  keys:
  - express-check-csurf-middleware-usage.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2()
  stsearch: $_ = $_()
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-csurf-middleware-usage.yaml'
  keys:
  - express-check-csurf-middleware-usage.5
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.1.0.0
  - code-string-concat.sources.0.1.1.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.use(require('serve-index')(...))
  stsearch: $_.use(require('serve-index')(...))
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-directory-listing.yaml'
  keys:
  - express-check-directory-listing.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('serve-index')
  stsearch: $_ = require('serve-index')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-directory-listing.yaml'
  keys:
  - express-check-directory-listing.0.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'serve-index'
  stsearch: import $_ from 'serve-index'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-directory-listing.yaml'
  keys:
  - express-check-directory-listing.0.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'serve-index'
  stsearch: import * as $_ from 'serve-index'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-directory-listing.yaml'
  keys:
  - express-check-directory-listing.0.1.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.use(..., $H2(...), ...)
  stsearch: $_.use(... $_(...) ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-check-directory-listing.yaml'
  keys:
  - express-check-directory-listing.0.1.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('cookie-session')
  stsearch: $_ = require('cookie-session')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-default-name.0.0
  - express-cookie-session-no-secure.0.0
  - express-cookie-session-no-httponly.0.0
  - express-cookie-session-no-domain.0.0
  - express-cookie-session-no-path.0.0
  - express-cookie-session-no-expires.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('express-session')
  stsearch: $_ = require('express-session')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-default-name.0.1
  - express-cookie-session-no-secure.0.1
  - express-cookie-session-no-httponly.0.1
  - express-cookie-session-no-domain.0.1
  - express-cookie-session-no-path.0.1
  - express-cookie-session-no-expires.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-session-hardcoded-secret.yaml'
  keys:
  - express-session-hardcoded-secret.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{name:...}'
  stsearch: '{name:...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-default-name.2.0
  - express-cookie-session-default-name.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2($H3,...);
  stsearch: |-
    $_ = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-default-name.3
  - express-cookie-session-no-secure.3
  - express-cookie-session-no-httponly.3
  - express-cookie-session-no-domain.3
  - express-cookie-session-no-path.3
  - express-cookie-session-no-expires.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-jwt-not-revoked.yaml'
  keys:
  - express-jwt-not-revoked.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.name = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.name = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-default-name.4
---
language: !lang 'javascript'
pattern:
  semgrep: '{cookie:{secure:true}}'
  stsearch: '{cookie:{secure:true}}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-secure.2.0
  - express-cookie-session-no-secure.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2 = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_ = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-secure.4
  - express-cookie-session-no-httponly.4
  - express-cookie-session-no-domain.4
  - express-cookie-session-no-path.4
  - express-cookie-session-no-expires.4
---
language: !lang 'javascript'
pattern:
  semgrep: '{secure:true}'
  stsearch: '{secure:true}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-secure.4.0
  - express-cookie-session-no-secure.5.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.cookie = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.cookie = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-secure.5
  - express-cookie-session-no-httponly.5
  - express-cookie-session-no-domain.5
  - express-cookie-session-no-path.5
  - express-cookie-session-no-expires.5
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.secure = true;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.secure = true;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-secure.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.cookie.secure = true;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.cookie.secure = true;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-secure.7
---
language: !lang 'javascript'
pattern:
  semgrep: '{cookie:{httpOnly:true}}'
  stsearch: '{cookie:{httpOnly:true}}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-httponly.2.0
  - express-cookie-session-no-httponly.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{httpOnly:true}'
  stsearch: '{httpOnly:true}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-httponly.4.0
  - express-cookie-session-no-httponly.5.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.httpOnly = true;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.httpOnly = true;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-httponly.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.cookie.httpOnly = true;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.cookie.httpOnly = true;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-httponly.7
---
language: !lang 'javascript'
pattern:
  semgrep: '{cookie:{domain:...}}'
  stsearch: '{cookie:{domain:...}}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-domain.2.0
  - express-cookie-session-no-domain.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{domain:...}'
  stsearch: '{domain:...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-domain.4.0
  - express-cookie-session-no-domain.5.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.domain = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.domain = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-domain.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.cookie.domain = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.cookie.domain = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-domain.7
---
language: !lang 'javascript'
pattern:
  semgrep: '{cookie:{path:...}}'
  stsearch: '{cookie:{path:...}}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-path.2.0
  - express-cookie-session-no-path.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{path:...}'
  stsearch: '{path:...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-path.4.0
  - express-cookie-session-no-path.5.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.path = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.path = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-path.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.cookie.path = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.cookie.path = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-path.7
---
language: !lang 'javascript'
pattern:
  semgrep: '{cookie:{expires:...}}'
  stsearch: '{cookie:{expires:...}}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-expires.2.0
  - express-cookie-session-no-expires.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{expires:...}'
  stsearch: '{expires:...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-expires.4.0
  - express-cookie-session-no-expires.5.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.expires = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.expires = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-expires.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $H2.cookie.expires = ...;
    ...
    $H3($H4,...);
  stsearch: |-
    $_ = ...;
    ...
    $_.cookie.expires = ...;
    ...
    $_($_...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-cookie-settings.yaml'
  keys:
  - express-cookie-session-no-expires.7
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'notevil'
  stsearch: import $_ from 'notevil'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import {$H1} from 'notevil'
  stsearch: import {$_} from 'notevil'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('notevil')
  stsearch: $_ = require('notevil')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1('...')
  stsearch: $_('...')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInContext("$H2", ...)
  stsearch: $_.runInContext("$_" ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.1.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-vm-noent.yaml'
  keys:
  - express-libxml-vm-noent.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInNewContext("$H2", ...)
  stsearch: $_.runInNewContext("$_" ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.1.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-vm-noent.yaml'
  keys:
  - express-libxml-vm-noent.0.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInThisContext("$H2", ...)
  stsearch: $_.runInThisContext("$_" ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.1.1.0.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-vm-noent.yaml'
  keys:
  - express-libxml-vm-noent.0.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.compileFunction("$H2", ...)
  stsearch: $_.compileFunction("$_" ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-detect-notevil-usage.yaml'
  keys:
  - express-detect-notevil-usage.1.1.0.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-vm-noent.yaml'
  keys:
  - express-libxml-vm-noent.0.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('express-jwt')
  stsearch: $_ = require('express-jwt')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-jwt-not-revoked.yaml'
  keys:
  - express-jwt-not-revoked.0
- path: !path 'semgrep-rules/javascript/express/security/express-jwt-hardcoded-secret.yaml'
  keys:
  - express-jwt-hardcoded-secret.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{isRevoked:...}'
  stsearch: '{isRevoked:...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-jwt-not-revoked.yaml'
  keys:
  - express-jwt-not-revoked.2.0
  - express-jwt-not-revoked.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: function ... ($H1, $H2) {...}
  stsearch: function ... ($_, $_) {...}
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.0.0
  - express-wkhtmltopdf-injection.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.0.0
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: function ... ($H1, $H2, $H3) {...}
  stsearch: function ... ($_, $_, $_) {...}
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.0.1
  - express-wkhtmltopdf-injection.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.0.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.0.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.0.1
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(..., function $H3($H4, $H5) {...})
  stsearch: $_.$_(... function $_($_, $_) {...})
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.0.2.0
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.0.2.0.0
  - express-wkhtmltopdf-injection.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.0.2
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.0.2.0.0
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.0.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(..., function $H3($H4, $H5, $H6) {...})
  stsearch: $_.$_(... function $_($_, $_, $_) {...})
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.0.2.0.1
  - express-wkhtmltopdf-injection.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.0.3
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.0.2.0.1
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.0.2.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.query
  stsearch: $_.query
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.7.0
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.1.0
  - express-wkhtmltopdf-injection.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.2.0
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.1.0
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.3
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.body
  stsearch: $_.body
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.7.1
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.1.1
  - express-wkhtmltopdf-injection.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.2.1
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.4
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.params
  stsearch: $_.params
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.7.2
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.1.2
  - express-wkhtmltopdf-injection.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.2.2
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.1.2
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.1.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.1.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.1.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.5
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.cookies
  stsearch: $_.cookies
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.1.3
  - express-wkhtmltopdf-injection.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.2.3
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.1.3
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.1.3
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.1.3
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.1.3
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.6
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.headers
  stsearch: $_.headers
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.0.1.4
  - express-wkhtmltopdf-injection.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.0.2.4
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.0.1.4
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.0.1.4
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.0.1.4
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.1.4
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.7
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.files.$H2.data.toString('utf8')
  stsearch: $_.files.$_.data.toString('utf8')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.1.5
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.1.5
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.1.5
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.1.5
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.files.$H2['data'].toString('utf8')
  stsearch: $_.files.$_['data'].toString('utf8')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.0.1.6
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.0.1.6
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.0.1.6
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.0.1.6
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.0.1.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    ({ $H1 }: Request,$H2: Response, $H3: NextFunction) =>
    {...}
  stsearch: |-
    ({ $_ }: Request,$_: Response, $_: NextFunction) =>
    {...}
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.1.0.0
  - express-wkhtmltopdf-injection.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.1.0.0
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.1.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.0.0
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: '({ $H1 }: Request,$H2: Response) => {...}'
  stsearch: '({ $_ }: Request,$_: Response) => {...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.1.0.1
  - express-wkhtmltopdf-injection.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.1.0.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.0.1
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: params
  stsearch: params
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.1.1.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.5.0
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.1.2.0
  - express-wkhtmltopdf-injection.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.1.2.0
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.1.2.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.2.0
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: query
  stsearch: query
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.1.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.5.1
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.1.2.1
  - express-wkhtmltopdf-injection.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.1.2.1
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.1.2.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.2.1
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: cookies
  stsearch: cookies
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.1.1.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.1.2.2
  - express-wkhtmltopdf-injection.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.1.2.2
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.1.2.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.2.2
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: headers
  stsearch: headers
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.1.1.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.1.2.3
  - express-wkhtmltopdf-injection.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.1.2.3
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.1.2.3
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.2.3
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.2.3
---
language: !lang 'javascript'
pattern:
  semgrep: body
  stsearch: body
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.1.1.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.5.2
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sources.1.2.4
  - express-wkhtmltopdf-injection.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sources.1.2.4
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sources.1.2.4
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.2.4
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.2.4
---
language: !lang 'javascript'
pattern:
  semgrep: files.$H1.data.toString('utf8')
  stsearch: files.$_.data.toString('utf8')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.2.5
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.2.5
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.2.5
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.2.5
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.2.5
---
language: !lang 'javascript'
pattern:
  semgrep: files.$H1['data'].toString('utf8')
  stsearch: files.$_['data'].toString('utf8')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sources.1.2.6
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sources.1.2.6
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sources.1.2.6
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sources.1.2.6
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sources.1.2.6
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('$H2')
  stsearch: $_ = require('$_')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sinks.0.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sinks.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from '$H2'
  stsearch: import $_ from '$_'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sinks.0.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sinks.0.0.0.1
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from '$H2'
  stsearch: import * as $_ from '$_'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sinks.0.0.0.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sinks.0.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3, {...,noent:true,...})
  stsearch: $_.$_($_, {...noent:true...})
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-noent.yaml'
  keys:
  - express-libxml-noent.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.parseXml($H2, {..., noent: true, ...}, ...)'
  stsearch: '$_.parseXml($_, {... noent: true ...} ...)'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-vm-noent.yaml'
  keys:
  - express-libxml-vm-noent.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1 = {..., noent: true, ...}'
  stsearch: '$_ = {... noent: true ...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-vm-noent.yaml'
  keys:
  - express-libxml-vm-noent.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.parseXml( $H2, $H3 )
  stsearch: $_.parseXml( $_, $_ )
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-libxml-vm-noent.yaml'
  keys:
  - express-libxml-vm-noent.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect("$H2"+$H3. ... .$H4)
  stsearch: $_.redirect("$_"+$_... .$_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect("$H2"+$H3. ... .$H4 + $...H5)
  stsearch: $_.redirect("$_"+$_... .$_ + ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect(`$H2${$H3. ... .$H4}...`)
  stsearch: $_.redirect(`$_${$_... .$_}...`)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect("$H2"+$H3.$H4[...])
  stsearch: $_.redirect("$_"+$_.$_[...])
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect("$H2"+$H3.$H4[...] + $...H5)
  stsearch: $_.redirect("$_"+$_.$_[...] + ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect(`$H2${$H3.$H4[...]}...`)
  stsearch: $_.redirect(`$_${$_.$_[...]}...`)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.0.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .$H2
  stsearch: $_... .$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.0.2.0
  - express-open-redirect.sinks.1.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.4.0
  - express-ssrf.sinks.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect($H2. ... .$H3)
  stsearch: $_.redirect($_... .$_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect($H2. ... .$H3 + $...H4)
  stsearch: $_.redirect($_... .$_ + ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect(`${$H2. ... .$H3}...`)
  stsearch: $_.redirect(`${$_... .$_}...`)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.1.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect($H2.$H3['...'])
  stsearch: $_.redirect($_.$_['...'])
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect($H2.$H3['...'] + $...H4)
  stsearch: $_.redirect($_.$_['...'] + ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.2.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect(`${$H2.$H3['...']}...`)
  stsearch: $_.redirect(`${$_.$_['...']}...`)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.2.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2
  stsearch: $_.$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.2.1
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2. ... .$H3
  stsearch: $_ = $_... .$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2.$H3['...']
  stsearch: $_ = $_.$_['...']
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2. ... .$H3 + $...H4
  stsearch: $_ = $_... .$_ + ...
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.0.2
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2.$H3['...'] + $...H4
  stsearch: $_ = $_.$_['...'] + ...
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = `${$H2. ... .$H3}...`
  stsearch: $_ = `${$_... .$_}...`
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.0.4
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = `${$H2.$H3['...']}...`
  stsearch: $_ = `${$_.$_['...']}...`
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect($H2)
  stsearch: $_.redirect($_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect($H2 + $...H3)
  stsearch: $_.redirect($_ + ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect(`${$H2}...`)
  stsearch: $_.redirect(`${$_}...`)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-open-redirect.yaml'
  keys:
  - express-open-redirect.sinks.3.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('path')
  stsearch: $_ = require('path')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'path'
  stsearch: import $_ from 'path'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.0.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.join(...,$H2,...)
  stsearch: $_.join(...$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.0.2.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.resolve(...,$H2,...)
  stsearch: $_.resolve(...$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.0.2.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: import 'path'
  stsearch: import 'path'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.1.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sinks.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: path.join(...,$H1,...)
  stsearch: path.join(...$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.1.2.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sinks.1.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: path.resolve(...,$H1,...)
  stsearch: path.resolve(...$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sinks.1.2.1
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sinks.1.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.replace(...)
  stsearch: $_.replace(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sanitizers.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sanitizers.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.indexOf(...)
  stsearch: $_.indexOf(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sanitizers.1
  - express-path-join-resolve-traversal.sanitizers.2.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sanitizers.1
  - path-join-resolve-traversal.sanitizers.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function ... (...) {
     ...
    }
  stsearch: |-
    function ... (...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-path-join-resolve-traversal.yaml'
  keys:
  - express-path-join-resolve-traversal.sanitizers.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sanitizers.2
---
language: !lang 'javascript'
pattern:
  semgrep: 'function ... (...,$H1: $H2, ...) {...}'
  stsearch: 'function ... (...$_: $_ ...) {...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sources.2.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3,...)
  stsearch: $_.$_($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sinks.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3,$H4)
  stsearch: $_.$_($_,$_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-res-sendfile.yaml'
  keys:
  - express-res-sendfile.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'express-session'
  stsearch: import $_ from 'express-session'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-session-hardcoded-secret.yaml'
  keys:
  - express-session-hardcoded-secret.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import {..., $H1, ...} from 'express-session'
  stsearch: import {... $_ ...} from 'express-session'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-session-hardcoded-secret.yaml'
  keys:
  - express-session-hardcoded-secret.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'express-session'
  stsearch: import * as $_ from 'express-session'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-session-hardcoded-secret.yaml'
  keys:
  - express-session-hardcoded-secret.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.use($H2({...}))
  stsearch: $_.use($_({...}))
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-session-hardcoded-secret.yaml'
  keys:
  - express-session-hardcoded-secret.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $H2
    ...
    $H3.use($H4($H5))
  stsearch: |-
    $_ = $_
    ...
    $_.use($_($_))
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-session-hardcoded-secret.yaml'
  keys:
  - express-session-hardcoded-secret.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: 'secret: ''$H1'''
  stsearch: 'secret: ''$_'''
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-session-hardcoded-secret.yaml'
  keys:
  - express-session-hardcoded-secret.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: function ... ($H1, ...) {...}
  stsearch: function ... ($_ ...) {...}
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    ({ $H1 }: Request,...) =>
    {...}
  stsearch: |-
    ({ $_ }: Request...) =>
    {...}
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: '({ $H1 }: $H2.Request,...) => {...}'
  stsearch: '({ $_ }: $_.Request...) => {...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sources.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('request')
  stsearch: $_ = require('request')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.0.0
  - express-ssrf.sinks.1.0.0
  - express-ssrf.sinks.2.0.0
  - express-ssrf.sinks.3.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'request'
  stsearch: import * as $_ from 'request'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.0.1
  - express-ssrf.sinks.1.0.1
  - express-ssrf.sinks.2.0.1
  - express-ssrf.sinks.3.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'request'
  stsearch: import $_ from 'request'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.0.2
  - express-ssrf.sinks.1.0.2
  - express-ssrf.sinks.2.0.2
  - express-ssrf.sinks.3.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("$H3"+$H4. ... .$H5)
  stsearch: $_.$_("$_"+$_... .$_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("$H3"+$H4. ... .$H5 + $...H6)
  stsearch: $_.$_("$_"+$_... .$_ + ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(`$H3${$H4. ... .$H5}...`)
  stsearch: $_.$_(`$_${$_... .$_}...`)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("$H3"+$H4.$H5[...])
  stsearch: $_.$_("$_"+$_.$_[...])
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("$H3"+$H4.$H5[...] + $...H6)
  stsearch: $_.$_("$_"+$_.$_[...] + ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(`$H3${$H4.$H5[...]}...`)
  stsearch: $_.$_(`$_${$_.$_[...]}...`)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.0.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3. ... .$H4,...)
  stsearch: $_.$_($_... .$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.1.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3. ... .$H4 + $...H5,...)
  stsearch: $_.$_($_... .$_ + ......)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.1.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(`${$H3. ... .$H4}...`,...)
  stsearch: $_.$_(`${$_... .$_}...`...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.1.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3.$H4['...'],...)
  stsearch: $_.$_($_.$_['...']...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.2.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3.$H4['...'] + $...H5,...)
  stsearch: $_.$_($_.$_['...'] + ......)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.2.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(`${$H3.$H4['...']}...`,...)
  stsearch: $_.$_(`${$_.$_['...']}...`...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.2.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2. ... .$H3['...']
  stsearch: $_ = $_... .$_['...']
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2. ... .$H3['...'] + $...H4
  stsearch: $_ = $_... .$_['...'] + ...
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = `${$H2. ... .$H3['...']}...`
  stsearch: $_ = `${$_... .$_['...']}...`
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = "$H2"+ $H3. ... .$H4
  stsearch: $_ = "$_"+ $_... .$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.6.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = "$H2"+$H3. ... .$H4 + $...H5
  stsearch: $_ = "$_"+$_... .$_ + ...
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.6.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = "$H2"+$H3.$H4[...]
  stsearch: $_ = "$_"+$_.$_[...]
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.6.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = "$H2"+$H3.$H4[...] + $...H5
  stsearch: $_ = "$_"+$_.$_[...] + ...
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.6.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = `$H2${$H3.$H4[...]}...`
  stsearch: $_ = `$_${$_.$_[...]}...`
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.1.6.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3 + $...H4,...)
  stsearch: $_.$_($_ + ......)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(`${$H3}...`,...)
  stsearch: $_.$_(`${$_}...`...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("$H3"+$H4,...)
  stsearch: $_.$_("$_"+$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.2.3.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("$H3"+$H4 + $...H5,...)
  stsearch: $_.$_("$_"+$_ + ......)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.2.3.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(`$H3${$H4}...`,...)
  stsearch: $_.$_(`$_${$_}...`...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-ssrf.yaml'
  keys:
  - express-ssrf.sinks.3.2.3.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(...)
  stsearch: $_.$_(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-third-party-object-deserialization.yaml'
  keys:
  - express-third-party-object-deserialization.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: '({ $H1 }: Request,$H2: Response, $H3: NextFunction) => {...}'
  stsearch: '({ $_ }: Request,$_: Response, $_: NextFunction) => {...}'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sources.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: require('xml2json')
  stsearch: require('xml2json')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sinks.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'xml2json'
  stsearch: import 'xml2json'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sinks.0.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.on('...', function(...) { ... $H2.toJson($H3,...); ... })
  stsearch: $_.on('...', function(...) { ... $_.toJson($_...); ... })
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/express-xml2json-xxe-event.yaml'
  keys:
  - express-xml2json-xxe-event.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = query.$H2
  stsearch: $_ = query.$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/possible-user-input-redirect.yaml'
  keys:
  - unknown-value-in-redirect.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2.query.$H3
  stsearch: $_ = $_.query.$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/possible-user-input-redirect.yaml'
  keys:
  - unknown-value-in-redirect.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = req.$H2
  stsearch: $_ = req.$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/possible-user-input-redirect.yaml'
  keys:
  - unknown-value-in-redirect.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.redirect(...)
  stsearch: $_.redirect(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/possible-user-input-redirect.yaml'
  keys:
  - unknown-value-in-redirect.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1[...] = $H2
  stsearch: $_[...] = $_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sinks.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1["..."] = $H2
  stsearch: $_["..."] = $_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1[...] = "..."
  stsearch: $_[...] = "..."
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sinks.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: var $H1 = $H2
  stsearch: var $_ = $_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sanitizers.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: var $H1 = $H2.$H3
  stsearch: var $_ = $_.$_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/remote-property-injection.yaml'
  keys:
  - remote-property-injection.sanitizers.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.render($H2, ...)
  stsearch: $_.render($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/res-render-injection.yaml'
  keys:
  - res-render-injection.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function ... ($H1, $H2) {
     ...
     $H3.$H4('Content-Type', '$H5')
    }
  stsearch: |-
    function ... ($_, $_) {
     ...
     $_.$_('Content-Type', '$_')
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1.$H2(..., function $H3($H4, $H5) {
     ...
     $H6.$H7('Content-Type', '$H8')
    })
  stsearch: |-
    $_.$_(... function $_($_, $_) {
     ...
     $_.$_('Content-Type', '$_')
    })
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function ... ($H1, $H2, $H3) {
     ...
     $H4.$H5('Content-Type', '$H6')
    }
  stsearch: |-
    function ... ($_, $_, $_) {
     ...
     $_.$_('Content-Type', '$_')
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function ... ($H1, $H2) {
     ...
     $H3.set('$H4')
    }
  stsearch: |-
    function ... ($_, $_) {
     ...
     $_.set('$_')
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1.$H2(..., function $H3($H4, $H5) {
     ...
     $H6.set('$H7')
    })
  stsearch: |-
    $_.$_(... function $_($_, $_) {
     ...
     $_.set('$_')
    })
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function ... ($H1, $H2, $H3) {
     ...
     $H4.set('$H5')
    }
  stsearch: |-
    function ... ($_, $_, $_) {
     ...
     $_.set('$_')
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.0.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    ({ $H1 }: Request,$H2: Response, $H3: NextFunction) =>
    {
     ...
     $H4.$H5('Content-Type', '$H6')
    }
  stsearch: |-
    ({ $_ }: Request,$_: Response, $_: NextFunction) =>
    {
     ...
     $_.$_('Content-Type', '$_')
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    ({ $H1 }: Request,$H2: Response) => {
     ...
     $H3.$H4('Content-Type', '$H5')
    }
  stsearch: |-
    ({ $_ }: Request,$_: Response) => {
     ...
     $_.$_('Content-Type', '$_')
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    ({ $H1 }: Request,$H2: Response, $H3: NextFunction) =>
    {
     ...
     $H4.set('$H5')
    }
  stsearch: |-
    ({ $_ }: Request,$_: Response, $_: NextFunction) =>
    {
     ...
     $_.set('$_')
    }
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sources.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.write($H2)
  stsearch: $_.write($_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sinks.0.0.0
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.send($H2)
  stsearch: $_.send($_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .set('...'). ... .send($H2)
  stsearch: $_... .set('...')... .send($_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .type('...'). ... .send($H2)
  stsearch: $_... .type('...')... .send($_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sinks.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'express-xss-sanitizer'
  stsearch: import $_ from 'express-xss-sanitizer'
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.5.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from "express-xss-sanitizer"
  stsearch: import * as $_ from "express-xss-sanitizer"
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.5.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: const { ..., $H1, ... } = require('express-xss-sanitizer')
  stsearch: const { ... $_ ... } = require('express-xss-sanitizer')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.5.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: var { ..., $H1, ... } = require('express-xss-sanitizer')
  stsearch: var { ... $_ ... } = require('express-xss-sanitizer')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.5.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: let { ...,$H1,... } = require('express-xss-sanitizer')
  stsearch: let { ...$_... } = require('express-xss-sanitizer')
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.5.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("express-xss-sanitizer")
  stsearch: $_ = require("express-xss-sanitizer")
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.5.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .type('$H2'). ... .send(...)
  stsearch: $_... .type('$_')... .send(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/direct-response-write.yaml'
  keys:
  - direct-response-write.sanitizers.6.0
---
language: !lang 'javascript'
pattern:
  semgrep: Mustache.escape = $H1
  stsearch: Mustache.escape = $_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/mustache/escape-function-overwrite.yaml'
  keys:
  - escape-function-overwrite.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("mustache")
  stsearch: $_ = require("mustache")
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/mustache/escape-function-overwrite.yaml'
  keys:
  - escape-function-overwrite.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.escape = $H2
  stsearch: $_.escape = $_
locations:
- path: !path 'semgrep-rules/javascript/express/security/audit/xss/mustache/escape-function-overwrite.yaml'
  keys:
  - escape-function-overwrite.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.set($H2, $H3)
  stsearch: $_.set($_, $_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.header($H2, $H3)
  stsearch: $_.header($_, $_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.setHeader($H2, $H3)
  stsearch: $_.setHeader($_, $_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.set({$H2: $H3}, ...)'
  stsearch: '$_.set({$_: $_} ...)'
locations:
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.writeHead($H2, {$H3: $H4}, ...)'
  stsearch: '$_.writeHead($_, {$_: $_} ...)'
locations:
- path: !path 'semgrep-rules/javascript/express/security/cors-misconfiguration.yaml'
  keys:
  - cors-misconfiguration.sinks.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: Object.assign(...)
  stsearch: Object.assign(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-data-exfiltration.yaml'
  keys:
  - express-data-exfiltration.sinks.0
- path: !path 'semgrep-rules/javascript/lang/security/insecure-object-assign.yaml'
  keys:
  - insecure-object-assign.sinks.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('node-expat')
  stsearch: $_ = require('node-expat')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'node-expat'
  stsearch: import $_ from 'node-expat'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'node-expat'
  stsearch: import * as $_ from 'node-expat'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new $H2.Parser(...)
  stsearch: $_ = new $_.Parser(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.parse($H2)
  stsearch: $_.parse($_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-expat-xxe.yaml'
  keys:
  - express-expat-xxe.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('pug')
  stsearch: $_ = require('pug')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'pug'
  stsearch: import * as $_ from 'pug'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('jade')
  stsearch: $_ = require('jade')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'jade'
  stsearch: import * as $_ from 'jade'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.compile(...)
  stsearch: $_.compile(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.1.0
  - express-insecure-template-usage.sinks.0.1.1.1
  - express-insecure-template-usage.sinks.0.6.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.compileClient(...)
  stsearch: $_.compileClient(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.compileClientWithDependenciesTracked(...)
  stsearch: $_.compileClientWithDependenciesTracked(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('dot')
  stsearch: $_ = require('dot')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'dot'
  stsearch: import * as $_ from 'dot'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.template(...)
  stsearch: $_.template(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.1.1.0
  - express-insecure-template-usage.sinks.0.4.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('ejs')
  stsearch: $_ = require('ejs')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'ejs'
  stsearch: import * as $_ from 'ejs'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.2.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('nunjucks')
  stsearch: $_ = require('nunjucks')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.3.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'nunjucks'
  stsearch: import * as $_ from 'nunjucks'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.3.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.renderString(...)
  stsearch: $_.renderString(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.3.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('lodash')
  stsearch: $_ = require('lodash')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.4.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'lodash'
  stsearch: import * as $_ from 'lodash'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.4.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('mustache')
  stsearch: $_ = require('mustache')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.5.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'mustache'
  stsearch: import * as $_ from 'mustache'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.5.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('eta')
  stsearch: $_ = require('eta')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.5.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'eta'
  stsearch: import * as $_ from 'eta'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.5.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('squirrelly')
  stsearch: $_ = require('squirrelly')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.5.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'squirrelly'
  stsearch: import * as $_ from 'squirrelly'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.5.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('hogan.js')
  stsearch: $_ = require('hogan.js')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.6.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'hogan.js'
  stsearch: import * as $_ from 'hogan.js'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.6.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('handlebars')
  stsearch: $_ = require('handlebars')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.6.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'handlebars'
  stsearch: import * as $_ from 'handlebars'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.sinks.0.6.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2($H3).then((...,$H4,...)=>{...})
  stsearch: $_.$_($_).then((...$_...)=>{...})
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-insecure-template-usage.yaml'
  keys:
  - express-insecure-template-usage.propagators.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'express-jwt'
  stsearch: import $_ from 'express-jwt'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-jwt-hardcoded-secret.yaml'
  keys:
  - express-jwt-hardcoded-secret.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'express-jwt'
  stsearch: import * as $_ from 'express-jwt'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-jwt-hardcoded-secret.yaml'
  keys:
  - express-jwt-hardcoded-secret.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import { ..., $H1, ... } from 'express-jwt'
  stsearch: import { ... $_ ... } from 'express-jwt'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-jwt-hardcoded-secret.yaml'
  keys:
  - express-jwt-hardcoded-secret.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1({...,secret: "$H2",...},...)'
  stsearch: '$_({...secret: "$_"...}...)'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-jwt-hardcoded-secret.yaml'
  keys:
  - express-jwt-hardcoded-secret.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = "$H2";
    ...
    $H3({...,secret: $H4},...);
  stsearch: |-
    $_ = "$_";
    ...
    $_({...secret: $_}...);
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-jwt-hardcoded-secret.yaml'
  keys:
  - express-jwt-hardcoded-secret.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: require('phantom')
  stsearch: require('phantom')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'phantom'
  stsearch: import 'phantom'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.open($H2,...)
  stsearch: $_.open($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.setContent($H2,...)
  stsearch: $_.setContent($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sinks.0.1.1
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.1
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.1.2
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-setcontent-injection.yaml'
  keys:
  - playwright-setcontent-injection.2
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-setcontent-injection.yaml'
  keys:
  - puppeteer-setcontent-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.openUrl($H2,...)
  stsearch: $_.openUrl($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sinks.0.1.2
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateJavaScript($H2,...)
  stsearch: $_.evaluateJavaScript($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sinks.0.1.3
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.property("content",$H2,...)
  stsearch: $_.property("content",$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-phantom-injection.yaml'
  keys:
  - express-phantom-injection.sinks.0.1.4
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: require('puppeteer')
  stsearch: require('puppeteer')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.0.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-arg-injection.yaml'
  keys:
  - puppeteer-evaluate-arg-injection.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-exposed-chrome-devtools.yaml'
  keys:
  - puppeteer-exposed-chrome-devtools.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-goto-injection.yaml'
  keys:
  - puppeteer-goto-injection.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-setcontent-injection.yaml'
  keys:
  - puppeteer-setcontent-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'puppeteer'
  stsearch: import 'puppeteer'
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.goto($H2,...)
  stsearch: $_.goto($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-goto-injection.yaml'
  keys:
  - playwright-goto-injection.2
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-goto-injection.yaml'
  keys:
  - puppeteer-goto-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluate($H2,...)
  stsearch: $_.evaluate($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.2
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-arg-injection.yaml'
  keys:
  - playwright-evaluate-arg-injection.2.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.2.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-arg-injection.yaml'
  keys:
  - puppeteer-evaluate-arg-injection.2.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluate($H2,$H3,...)
  stsearch: $_.evaluate($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateHandle($H2,...)
  stsearch: $_.evaluateHandle($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.4
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-arg-injection.yaml'
  keys:
  - playwright-evaluate-arg-injection.2.1
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.2.1
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-arg-injection.yaml'
  keys:
  - puppeteer-evaluate-arg-injection.2.1
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateHandle($H2,$H3,...)
  stsearch: $_.evaluateHandle($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateOnNewDocument($H2,...)
  stsearch: $_.evaluateOnNewDocument($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.6
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.2.2
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-arg-injection.yaml'
  keys:
  - puppeteer-evaluate-arg-injection.2.2
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateOnNewDocument($H2,$H3,...)
  stsearch: $_.evaluateOnNewDocument($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-puppeteer-injection.yaml'
  keys:
  - express-puppeteer-injection.sinks.0.1.7
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('sandbox')
  stsearch: $_ = require('sandbox')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sinks.0.0
- path: !path 'semgrep-rules/javascript/sandbox/security/audit/sandbox-code-injection.yaml'
  keys:
  - sandbox-code-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new $H2(...)
  stsearch: $_ = new $_(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sinks.0.1.0.0
- path: !path 'semgrep-rules/javascript/sandbox/security/audit/sandbox-code-injection.yaml'
  keys:
  - sandbox-code-injection.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.run(...)
  stsearch: $_.run(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sinks.0.1.0.1
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1($H2).run(...)
  stsearch: new $_($_).run(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1().run(...)
  stsearch: new $_().run(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-sandbox-injection.yaml'
  keys:
  - express-sandbox-code-injection.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('vm')
  stsearch: $_ = require('vm')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sinks.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInContext(...)
  stsearch: $_.runInContext(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInNewContext(...)
  stsearch: $_.runInNewContext(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.compileFunction(...)
  stsearch: $_.compileFunction(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInThisContext(...)
  stsearch: $_.runInThisContext(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1.Script(...)
  stsearch: new $_.Script(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm-injection.yaml'
  keys:
  - express-vm-injection.sinks.0.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: require('vm2')
  stsearch: require('vm2')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.0
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new VM(...)
  stsearch: $_ = new VM(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = new NodeVM(...)
  stsearch: $_ = new NodeVM(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: new VM(...).run(...)
  stsearch: new VM(...).run(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: new NodeVM(...).run(...)
  stsearch: new NodeVM(...).run(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: new VMScript(...)
  stsearch: new VMScript(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: new VM(...)
  stsearch: new VM(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: new NodeVM(...)
  stsearch: new NodeVM(...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-vm2-injection.yaml'
  keys:
  - express-vm2-injection.sinks.0.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.generate($H2,...)
  stsearch: $_.generate($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltoimage-injection.sinks.0.0
- path: !path 'semgrep-rules/javascript/wkhtmltoimage/security/audit/wkhtmltoimage-injection.yaml'
  keys:
  - wkhtmltoimage-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('wkhtmltopdf')
  stsearch: $_ = require('wkhtmltopdf')
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltopdf-injection.sinks.0.0
- path: !path 'semgrep-rules/javascript/wkhtmltopdf/security/audit/wkhtmltopdf-injection.yaml'
  keys:
  - wkhtmltopdf-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1($H2,...)
  stsearch: $_($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-wkhtml-injection.yaml'
  keys:
  - express-wkhtmltopdf-injection.sinks.0.1
- path: !path 'semgrep-rules/javascript/wkhtmltopdf/security/audit/wkhtmltopdf-injection.yaml'
  keys:
  - wkhtmltopdf-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.toJson($H2,...)
  stsearch: $_.toJson($_...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/express-xml2json-xxe.yaml'
  keys:
  - express-xml2json-xxe.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '`...`'
  stsearch: '`...`'
locations:
- path: !path 'semgrep-rules/javascript/express/security/injection/raw-html-format.yaml'
  keys:
  - raw-html-format.sinks.0.0.1.0
- path: !path 'semgrep-rules/javascript/lang/correctness/missing-template-string-indicator.yaml'
  keys:
  - missing-template-string-indicator.0
---
language: !lang 'javascript'
pattern:
  semgrep: '"$H1".concat($H2)'
  stsearch: '"$_".concat($_)'
locations:
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: util.format($H1, $H2)
  stsearch: util.format($_, $_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: '`$H1${$H2}...`'
  stsearch: '`$_${$_}...`'
locations:
- path: !path 'semgrep-rules/javascript/express/security/injection/tainted-sql-string.yaml'
  keys:
  - tainted-sql-string.sinks.0.0.0.0.3
- path: !path 'semgrep-rules/javascript/lang/security/html-in-template-string.yaml'
  keys:
  - html-in-template-string.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: require($H1)
  stsearch: require($_)
locations:
- path: !path 'semgrep-rules/javascript/express/security/require-request.yaml'
  keys:
  - require-request.sinks.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.set($H2, ...)
  stsearch: $_.set($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.header($H2, ...)
  stsearch: $_.header($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.setHeader($H2, ...)
  stsearch: $_.setHeader($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.set({$H2: ...}, ...)'
  stsearch: '$_.set({$_: ...} ...)'
locations:
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.writeHead($H2, {$H3: ...}, ...)'
  stsearch: '$_.writeHead($_, {$_: ...} ...)'
locations:
- path: !path 'semgrep-rules/javascript/express/security/x-frame-options-misconfiguration.yaml'
  keys:
  - x-frame-options-misconfiguration.sinks.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: createNodesFromMarkup(...)
  stsearch: createNodesFromMarkup(...)
locations:
- path: !path 'semgrep-rules/javascript/fbjs/security/audit/insecure-createnodesfrommarkup.yaml'
  keys:
  - insecure-createnodesfrommarkup.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.createNodesFromMarkup(...)
  stsearch: $_.createNodesFromMarkup(...)
locations:
- path: !path 'semgrep-rules/javascript/fbjs/security/audit/insecure-createnodesfrommarkup.yaml'
  keys:
  - insecure-createnodesfrommarkup.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: createNodesFromMarkup("...",...)
  stsearch: createNodesFromMarkup("..."...)
locations:
- path: !path 'semgrep-rules/javascript/fbjs/security/audit/insecure-createnodesfrommarkup.yaml'
  keys:
  - insecure-createnodesfrommarkup.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.createNodesFromMarkup("...",...)
  stsearch: $_.createNodesFromMarkup("..."...)
locations:
- path: !path 'semgrep-rules/javascript/fbjs/security/audit/insecure-createnodesfrommarkup.yaml'
  keys:
  - insecure-createnodesfrommarkup.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('grpc');
    ...
    $H1($H2,...,$H3.createInsecure(),...);
  stsearch: |-
    require('grpc');
    ...
    $_($_...$_.createInsecure()...);
locations:
- path: !path 'semgrep-rules/javascript/grpc/security/grpc-nodejs-insecure-connection.yaml'
  keys:
  - grpc-nodejs-insecure-connection.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('grpc');
    ...
    new $H1($H2,...,$H3.createInsecure(),...);
  stsearch: |-
    require('grpc');
    ...
    new $_($_...$_.createInsecure()...);
locations:
- path: !path 'semgrep-rules/javascript/grpc/security/grpc-nodejs-insecure-connection.yaml'
  keys:
  - grpc-nodejs-insecure-connection.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('grpc');
    ...
    $H1 = ...;
    ...
    $H2($H3,...,$H4,...);
  stsearch: |-
    require('grpc');
    ...
    $_ = ...;
    ...
    $_($_...$_...);
locations:
- path: !path 'semgrep-rules/javascript/grpc/security/grpc-nodejs-insecure-connection.yaml'
  keys:
  - grpc-nodejs-insecure-connection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.createInsecure()
  stsearch: $_.createInsecure()
locations:
- path: !path 'semgrep-rules/javascript/grpc/security/grpc-nodejs-insecure-connection.yaml'
  keys:
  - grpc-nodejs-insecure-connection.2.0
  - grpc-nodejs-insecure-connection.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('grpc');
    ...
    $H1 = ...;
    ...
    new $H2($H3,...,$H4,...);
  stsearch: |-
    require('grpc');
    ...
    $_ = ...;
    ...
    new $_($_...$_...);
locations:
- path: !path 'semgrep-rules/javascript/grpc/security/grpc-nodejs-insecure-connection.yaml'
  keys:
  - grpc-nodejs-insecure-connection.3
---
language: !lang 'javascript'
pattern:
  semgrep: require('jose')
  stsearch: require('jose')
locations:
- path: !path 'semgrep-rules/javascript/jose/security/audit/jose-exposed-data.yaml'
  keys:
  - jose-exposed-data.0
---
language: !lang 'javascript'
pattern:
  semgrep: function (...,$H1,...) {...}
  stsearch: function (...$_...) {...}
locations:
- path: !path 'semgrep-rules/javascript/jose/security/audit/jose-exposed-data.yaml'
  keys:
  - jose-exposed-data.1.0.0
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-exposed-data.yaml'
  keys:
  - jwt-exposed-data.1.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-arg-injection.yaml'
  keys:
  - playwright-evaluate-arg-injection.1.1
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-arg-injection.yaml'
  keys:
  - puppeteer-evaluate-arg-injection.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.JWT.sign($H2,...)
  stsearch: $_.JWT.sign($_...)
locations:
- path: !path 'semgrep-rules/javascript/jose/security/audit/jose-exposed-data.yaml'
  keys:
  - jose-exposed-data.1.0.1.0
  - jose-exposed-data.1.1.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sign($H2,...)
  stsearch: $_.sign($_...)
locations:
- path: !path 'semgrep-rules/javascript/jose/security/audit/jose-exposed-data.yaml'
  keys:
  - jose-exposed-data.1.0.1.1
  - jose-exposed-data.1.1.1.1
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-exposed-data.yaml'
  keys:
  - jwt-exposed-data.2
---
language: !lang 'javascript'
pattern:
  semgrep: function $H1(...,$H2,...) {...}
  stsearch: function $_(...$_...) {...}
locations:
- path: !path 'semgrep-rules/javascript/jose/security/audit/jose-exposed-data.yaml'
  keys:
  - jose-exposed-data.1.1.0
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-exposed-data.yaml'
  keys:
  - jwt-exposed-data.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: var $H1 = require("jose")
  stsearch: var $_ = require("jose")
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.0
---
language: !lang 'javascript'
pattern:
  semgrep: var {JWT} = $H1
  stsearch: var {JWT} = $_
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: var {JWK, JWT} = $H1
  stsearch: var {JWK, JWT} = $_
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: JWT.verify($H1, "...", ...)
  stsearch: JWT.verify($_, "..." ...)
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: JWT.sign($H1, "...", ...)
  stsearch: JWT.sign($_, "..." ...)
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: JWT.verify($H1, JWK.asKey("..."), ...)
  stsearch: JWT.verify($_, JWK.asKey("...") ...)
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sign($H2, JWK.asKey("..."), ...)
  stsearch: $_.sign($_, JWK.asKey("...") ...)
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.2.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require("jose");
    ...
    var { JWK, JWT } = $H2;
    ...
    var $H3 = JWT.verify($H4, JWK.None,...);
  stsearch: |-
    var $_ = require("jose");
    ...
    var { JWK, JWT } = $_;
    ...
    var $_ = JWT.verify($_, JWK.None...);
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-none-alg.yaml'
  keys:
  - jwt-none-alg.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require("jose");
    ...
    var { JWK, JWT } = $H2;
    ...
    $H3 = JWT.verify($H4, JWK.None,...);
  stsearch: |-
    var $_ = require("jose");
    ...
    var { JWK, JWT } = $_;
    ...
    $_ = JWT.verify($_, JWK.None...);
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-none-alg.yaml'
  keys:
  - jwt-none-alg.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require("jose");
    ...
    var { JWK, JWT } = $H2;
    ...
    JWT.verify($H3, JWK.None,...);
  stsearch: |-
    var $_ = require("jose");
    ...
    var { JWK, JWT } = $_;
    ...
    JWT.verify($_, JWK.None...);
locations:
- path: !path 'semgrep-rules/javascript/jose/security/jwt-none-alg.yaml'
  keys:
  - jwt-none-alg.2
---
language: !lang 'javascript'
pattern:
  semgrep: $.$H1($H2,...)
  stsearch: $.$_($_...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $(...).$H1($H2,...)
  stsearch: $(...).$_($_...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.0.1
  - jquery-insecure-method.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: jQuery.$H1($H2,...)
  stsearch: jQuery.$_($_...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: jQuery(...).$H1($H2,...)
  stsearch: jQuery(...).$_($_...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.0.3
  - jquery-insecure-method.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $.$H1("...",...)
  stsearch: $.$_("..."...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $(...).$H1("...",...)
  stsearch: $(...).$_("..."...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: jQuery.$H1("...",...)
  stsearch: jQuery.$_("..."...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: jQuery(...).$H1("...",...)
  stsearch: jQuery(...).$_("..."...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $("...",...).$H1(...)
  stsearch: $("..."...).$_(...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: jQuery("...",...).$H1(...)
  stsearch: jQuery("..."...).$_(...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-method.yaml'
  keys:
  - jquery-insecure-method.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $(...)
  stsearch: $(...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.0
  - jquery-insecure-selector.0.1
  - jquery-insecure-selector.0.4.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: window
  stsearch: window
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.0.0
  - jquery-insecure-selector.0.2.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: location
  stsearch: location
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.1.0
  - jquery-insecure-selector.0.3.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = ...;
    ...
    $(...);
  stsearch: |-
    $_ = ...;
    ...
    $(...);
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.2.0
  - jquery-insecure-selector.0.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(..., $H2, ...) {
     ...
    }
  stsearch: |-
    function $_(... $_ ...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.4.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (..., $H1, ...) {
     ...
    }
  stsearch: |-
    function (... $_ ...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.4.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.4.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.4.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $("..." + (...))
  stsearch: $("..." + (...))
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.4.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $((...) + "...")
  stsearch: $((...) + "...")
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.4.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1.each(function($H2, $H3) {
     ...
    })
  stsearch: |-
    $_.each(function($_, $_) {
     ...
    })
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.0.4.2
---
language: !lang 'javascript'
pattern:
  semgrep: $(window)
  stsearch: $(window)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.1
---
language: !lang 'javascript'
pattern:
  semgrep: $(document)
  stsearch: $(document)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.2
---
language: !lang 'javascript'
pattern:
  semgrep: $(this)
  stsearch: $(this)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/jquery-insecure-selector.yaml'
  keys:
  - jquery-insecure-selector.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.html(...)
  stsearch: $_.html(...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/prohibit-jquery-html.yaml'
  keys:
  - prohibit-jquery-html.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.html("...",...)
  stsearch: $_.html("..."...)
locations:
- path: !path 'semgrep-rules/javascript/jquery/security/audit/prohibit-jquery-html.yaml'
  keys:
  - prohibit-jquery-html.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('jsonwebtoken')
  stsearch: $_ = require('jsonwebtoken')
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-decode-without-verify.yaml'
  keys:
  - jwt-decode-without-verify.0
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-exposed-data.yaml'
  keys:
  - jwt-exposed-data.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.verify($H2, ...)
  stsearch: $_.verify($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-decode-without-verify.yaml'
  keys:
  - jwt-decode-without-verify.1
  - jwt-decode-without-verify.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: if (...) { ... }
  stsearch: if (...) { ... }
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-decode-without-verify.yaml'
  keys:
  - jwt-decode-without-verify.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.decode($H2, ...)
  stsearch: $_.decode($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/audit/jwt-decode-without-verify.yaml'
  keys:
  - jwt-decode-without-verify.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = '$H2'
  stsearch: $_ = '$_'
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sources.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sign($H2, '$H3',...)
  stsearch: $_.sign($_, '$_'...)
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sources.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.verify($H2, '$H3',...)
  stsearch: $_.verify($_, '$_'...)
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sources.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = "$H2"
    ...
    class $H3 {
     ...
    }
  stsearch: |-
    $_ = "$_"
    ...
    class $_ {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sources.0.0.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("jsonwebtoken")
  stsearch: $_ = require("jsonwebtoken")
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sinks.0.0.0
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-none-alg.yaml'
  keys:
  - jwt-none-alg.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from "jsonwebtoken"
  stsearch: import $_ from "jsonwebtoken"
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from "jsonwebtoken"
  stsearch: import * as $_ from "jsonwebtoken"
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import {...,$H1,...} from "jsonwebtoken"
  stsearch: import {...$_...} from "jsonwebtoken"
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sign($H2,$H3,...)
  stsearch: $_.sign($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.verify($H2,$H3,...)
  stsearch: $_.verify($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-hardcode.yaml'
  keys:
  - hardcoded-jwt-secret.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.verify($H2, $H3, {algorithms:[...,'none',...]},...)
  stsearch: $_.verify($_, $_, {algorithms:[...'none'...]}...)
locations:
- path: !path 'semgrep-rules/javascript/jsonwebtoken/security/jwt-none-alg.yaml'
  keys:
  - jwt-none-alg.1
---
language: !lang 'javascript'
pattern:
  semgrep: undefined = $H1
  stsearch: undefined = $_
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/assigned-undefined.yaml'
  keys:
  - assigned-undefined.0
---
language: !lang 'javascript'
pattern:
  semgrep: var undefined = $H1
  stsearch: var undefined = $_
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/assigned-undefined.yaml'
  keys:
  - assigned-undefined.1
---
language: !lang 'javascript'
pattern:
  semgrep: let undefined = $H1
  stsearch: let undefined = $_
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/assigned-undefined.yaml'
  keys:
  - assigned-undefined.2
---
language: !lang 'javascript'
pattern:
  semgrep: const undefined = $H1
  stsearch: const undefined = $_
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/assigned-undefined.yaml'
  keys:
  - assigned-undefined.3
---
language: !lang 'javascript'
pattern:
  semgrep: require(...)
  stsearch: require(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/lazy-load-module.yaml'
  keys:
  - lazy-load-module.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-require.yaml'
  keys:
  - detect-non-literal-require.sinks.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...) {
     ...
    }
  stsearch: |-
    function $_(...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/lazy-load-module.yaml'
  keys:
  - lazy-load-module.1
---
language: !lang 'javascript'
pattern:
  semgrep: alert()
  stsearch: alert()
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/leftover_debugging.yaml'
  keys:
  - javascript-alert.0
---
language: !lang 'javascript'
pattern:
  semgrep: alert($H1)
  stsearch: alert($_)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/leftover_debugging.yaml'
  keys:
  - javascript-alert.1
---
language: !lang 'javascript'
pattern:
  semgrep: debugger
  stsearch: debugger
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/leftover_debugging.yaml'
  keys:
  - javascript-debugger
---
language: !lang 'javascript'
pattern:
  semgrep: confirm(...)
  stsearch: confirm(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/leftover_debugging.yaml'
  keys:
  - javascript-confirm
---
language: !lang 'javascript'
pattern:
  semgrep: prompt()
  stsearch: prompt()
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/leftover_debugging.yaml'
  keys:
  - javascript-prompt.0
---
language: !lang 'javascript'
pattern:
  semgrep: prompt($H1)
  stsearch: prompt($_)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/leftover_debugging.yaml'
  keys:
  - javascript-prompt.1
---
language: !lang 'javascript'
pattern:
  semgrep: prompt($H1, $H2)
  stsearch: prompt($_, $_)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/leftover_debugging.yaml'
  keys:
  - javascript-prompt.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    for (...) {
     ...
    }
  stsearch: |-
    for (...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    while (...) {
     ...
    }
  stsearch: |-
    while (...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    do {
     ...
    } while (...)
  stsearch: |-
    do {
     ...
    } while (...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.forEach(...)
  stsearch: $_.forEach(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.0.3
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.map(...)
  stsearch: $_.map(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.0.4
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.reduce(...)
  stsearch: $_.reduce(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.0.5
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.reduceRight(...)
  stsearch: $_.reduceRight(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.0.6
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.6
---
language: !lang 'javascript'
pattern:
  semgrep: zlib.$H1(...)
  stsearch: zlib.$_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/best-practice/zlib-async-loop.yaml'
  keys:
  - zlib-async-loop.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.replaceAll("...",$H2)
  stsearch: $_.replaceAll("...",$_)
locations:
- path: !path 'semgrep-rules/javascript/lang/correctness/no-replaceall.yaml'
  keys:
  - no-replaceall
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $H2;
    $H3 = $H4;
  stsearch: |-
    $_ = $_;
    $_ = $_;
locations:
- path: !path 'semgrep-rules/javascript/lang/correctness/useless-assign.yaml'
  keys:
  - useless-assignment.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $H2;
    $H3 = ...;
  stsearch: |-
    $_ = $_;
    $_ = ...;
locations:
- path: !path 'semgrep-rules/javascript/lang/correctness/useless-assign.yaml'
  keys:
  - useless-assignment.1
---
language: !lang 'javascript'
pattern:
  semgrep: assert(...)
  stsearch: assert(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/correctness/useless-eqeq.yaml'
  keys:
  - eqeq-is-bad.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 == $H2
  stsearch: $_ == $_
locations:
- path: !path 'semgrep-rules/javascript/lang/correctness/useless-eqeq.yaml'
  keys:
  - eqeq-is-bad.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 != $H2
  stsearch: $_ != $_
locations:
- path: !path 'semgrep-rules/javascript/lang/correctness/useless-eqeq.yaml'
  keys:
  - eqeq-is-bad.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: 1 == 1
  stsearch: 1 == 1
locations:
- path: !path 'semgrep-rules/javascript/lang/correctness/useless-eqeq.yaml'
  keys:
  - eqeq-is-bad.2
---
language: !lang 'javascript'
pattern:
  semgrep: import { ...,$H1,... } from 'next/router'
  stsearch: import { ...$_... } from 'next/router'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'next/router'
  stsearch: import $_ from 'next/router'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: const { ...,$H1,... } = $H2.query
  stsearch: const { ...$_... } = $_.query
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.1.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: var { ...,$H1,... } = $H2.query
  stsearch: var { ...$_... } = $_.query
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.1.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: let { ...,$H1,... } = $H2.query
  stsearch: let { ...$_... } = $_.query
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.1.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.query.$H2
  stsearch: $_.query.$_
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.1.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1().query.$H2
  stsearch: $_().query.$_
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/code-string-concat.yaml'
  keys:
  - code-string-concat.sources.0.1.1.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function ... (...,$H1,...) {
     ...
    }
  stsearch: |-
    function ... (...$_...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mssql-sqli.yaml'
  keys:
  - node-mssql-sqli.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-postgres-sqli.yaml'
  keys:
  - node-postgres-sqli.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sources.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: spawn(...)
  stsearch: spawn(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: spawnSync(...)
  stsearch: spawnSync(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawn(...)
  stsearch: $_.spawn(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawnSync(...)
  stsearch: $_.spawnSync(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1("...",["-c", $H2, ...],...)
  stsearch: $_("...",["-c", $_ ...]...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1($H2,["-c", $H3, ...],...)
  stsearch: $_($_,["-c", $_ ...]...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.2.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1("...",[$H2, ...],...)
  stsearch: $_("...",[$_ ...]...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1($H2,[$H3, ...],...)
  stsearch: $_($_,[$_ ...]...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/dangerous-spawn-shell.yaml'
  keys:
  - dangerous-spawn-shell.sinks.0.2.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('fs')
  stsearch: $_ = require('fs')
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('fs/promises')
  stsearch: $_ = require('fs/promises')
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'fs'
  stsearch: import * as $_ from 'fs'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'fs'
  stsearch: import $_ from 'fs'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'fs/promises'
  stsearch: import * as $_ from 'fs/promises'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'fs/promises'
  stsearch: import $_ from 'fs/promises'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .$H2("...", ...)
  stsearch: $_... .$_("..." ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .access($H2,...)
  stsearch: $_... .access($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .appendFile($H2,...)
  stsearch: $_... .appendFile($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .chmod($H2,...)
  stsearch: $_... .chmod($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .chown($H2,...)
  stsearch: $_... .chown($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .close($H2,...)
  stsearch: $_... .close($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .copyFile($H2,...)
  stsearch: $_... .copyFile($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .copyFile($H2, $H3,...)
  stsearch: $_... .copyFile($_, $_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.6
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .cp($H2, ...)
  stsearch: $_... .cp($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.7
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .cp($H2, $H3, ...)
  stsearch: $_... .cp($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.8
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .createReadStream($H2,...)
  stsearch: $_... .createReadStream($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.9
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .createWriteStream($H2,...)
  stsearch: $_... .createWriteStream($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.10
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .exists($H2, ...)
  stsearch: $_... .exists($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.11
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fchmod($H2, ...)
  stsearch: $_... .fchmod($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.12
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fchown($H2, ...)
  stsearch: $_... .fchown($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.13
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fdatasync($H2, ...)
  stsearch: $_... .fdatasync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.14
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fstat($H2, ...)
  stsearch: $_... .fstat($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.15
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fsync($H2, ...)
  stsearch: $_... .fsync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.16
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .ftruncate($H2, ...)
  stsearch: $_... .ftruncate($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.17
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .futimes($H2, ...)
  stsearch: $_... .futimes($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.18
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lchmod($H2, ...)
  stsearch: $_... .lchmod($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.19
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lchown($H2, ...)
  stsearch: $_... .lchown($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.20
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lutimes($H2, ...)
  stsearch: $_... .lutimes($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.21
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .link($H2, ...)
  stsearch: $_... .link($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.22
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .link($H2, $H3, ...)
  stsearch: $_... .link($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.23
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lstat($H2, ...)
  stsearch: $_... .lstat($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.24
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .mkdir($H2, ...)
  stsearch: $_... .mkdir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.25
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .mkdtemp($H2, ...)
  stsearch: $_... .mkdtemp($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.26
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .open($H2, ...)
  stsearch: $_... .open($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.27
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .opendir($H2, ...)
  stsearch: $_... .opendir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.28
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .read($H2, ...)
  stsearch: $_... .read($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.29
  - detect-non-literal-fs-filename.sinks.0.2.30
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readdir($H2, ...)
  stsearch: $_... .readdir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.31
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readFile($H2, ...)
  stsearch: $_... .readFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.32
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readlink($H2, ...)
  stsearch: $_... .readlink($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.33
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readv($H2, ...)
  stsearch: $_... .readv($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.34
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .realpath($H2, ...)
  stsearch: $_... .realpath($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.35
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .realpath.native($H2, ...)
  stsearch: $_... .realpath.native($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.36
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .rename($H2, ...)
  stsearch: $_... .rename($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.37
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .rename($H2, $H3, ...)
  stsearch: $_... .rename($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.38
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .rmdir($H2, ...)
  stsearch: $_... .rmdir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.39
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .rm($H2, ...)
  stsearch: $_... .rm($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.40
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .stat($H2, ...)
  stsearch: $_... .stat($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.41
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .symlink($H2, $H3, ...)
  stsearch: $_... .symlink($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.42
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .symlink($H2, ...)
  stsearch: $_... .symlink($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.43
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .truncate($H2, ...)
  stsearch: $_... .truncate($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.44
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .unlink($H2, ...)
  stsearch: $_... .unlink($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.45
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .unwatchFile($H2, ...)
  stsearch: $_... .unwatchFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.46
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .utimes($H2, ...)
  stsearch: $_... .utimes($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.47
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .watch($H2, ...)
  stsearch: $_... .watch($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.48
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .watchFile($H2, ...)
  stsearch: $_... .watchFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.49
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .write($H2, ...)
  stsearch: $_... .write($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.50
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .writeFile($H2, ...)
  stsearch: $_... .writeFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.51
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .writev($H2, ...)
  stsearch: $_... .writev($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.52
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .accessSync($H2, ...)
  stsearch: $_... .accessSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.53
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .appendFileSync($H2, ...)
  stsearch: $_... .appendFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.54
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .chmodSync($H2, ...)
  stsearch: $_... .chmodSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.55
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .chownSync($H2, ...)
  stsearch: $_... .chownSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.56
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .closeSync($H2, ...)
  stsearch: $_... .closeSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.57
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .copyFileSync($H2, ...)
  stsearch: $_... .copyFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.58
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .copyFileSync($H2, $H3, ...)
  stsearch: $_... .copyFileSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.59
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .cpSync($H2, ...)
  stsearch: $_... .cpSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.60
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .cpSync($H2, $H3, ...)
  stsearch: $_... .cpSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.61
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .existsSync($H2, ...)
  stsearch: $_... .existsSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.62
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fchmodSync($H2, ...)
  stsearch: $_... .fchmodSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.63
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fchownSync($H2, ...)
  stsearch: $_... .fchownSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.64
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fdatasyncSync($H2, ...)
  stsearch: $_... .fdatasyncSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.65
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fstatSync($H2, ...)
  stsearch: $_... .fstatSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.66
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .fsyncSync($H2, ...)
  stsearch: $_... .fsyncSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.67
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .ftruncateSync($H2, ...)
  stsearch: $_... .ftruncateSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.68
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .futimesSync($H2, ...)
  stsearch: $_... .futimesSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.69
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lchmodSync($H2, ...)
  stsearch: $_... .lchmodSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.70
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lchownSync($H2, ...)
  stsearch: $_... .lchownSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.71
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lutimesSync($H2, ...)
  stsearch: $_... .lutimesSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.72
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .linkSync($H2, ...)
  stsearch: $_... .linkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.73
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .linkSync($H2, $H3, ...)
  stsearch: $_... .linkSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.74
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .lstatSync($H2, ...)
  stsearch: $_... .lstatSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.75
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .mkdirSync($H2, ...)
  stsearch: $_... .mkdirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.76
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .mkdtempSync($H2, ...)
  stsearch: $_... .mkdtempSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.77
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .opendirSync($H2, ...)
  stsearch: $_... .opendirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.78
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .openSync($H2, ...)
  stsearch: $_... .openSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.79
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readdirSync($H2, ...)
  stsearch: $_... .readdirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.80
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readFileSync($H2, ...)
  stsearch: $_... .readFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.81
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readlinkSync($H2, ...)
  stsearch: $_... .readlinkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.82
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readSync($H2, ...)
  stsearch: $_... .readSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.83
  - detect-non-literal-fs-filename.sinks.0.2.84
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .readvSync($H2, ...)
  stsearch: $_... .readvSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.85
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .realpathync($H2, ...)
  stsearch: $_... .realpathync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.86
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .realpathSync.native($H2, ...)
  stsearch: $_... .realpathSync.native($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.87
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .renameSync($H2, ...)
  stsearch: $_... .renameSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.88
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .renameSync($H2, $H3, ...)
  stsearch: $_... .renameSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.89
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .rmdirSync($H2, ...)
  stsearch: $_... .rmdirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.90
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .rmSync($H2, ...)
  stsearch: $_... .rmSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.91
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .statSync($H2, ...)
  stsearch: $_... .statSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.92
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .symlinkSync($H2, ...)
  stsearch: $_... .symlinkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.93
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .symlinkSync($H2, $H3, ...)
  stsearch: $_... .symlinkSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.94
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .truncateSync($H2, ...)
  stsearch: $_... .truncateSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.95
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .unlinkSync($H2, ...)
  stsearch: $_... .unlinkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.96
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .utimesSync($H2, ...)
  stsearch: $_... .utimesSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.97
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .writeFileSync($H2, ...)
  stsearch: $_... .writeFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.98
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .writeSync($H2, ...)
  stsearch: $_... .writeSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.99
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .writevSync($H2, ...)
  stsearch: $_... .writevSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.0.2.100
---
language: !lang 'javascript'
pattern:
  semgrep: import 'fs'
  stsearch: import 'fs'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'fs/promises'
  stsearch: import 'fs/promises'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1("...", ...)
  stsearch: $_("..." ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: access($H1,...)
  stsearch: access($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: appendFile($H1,...)
  stsearch: appendFile($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: chmod($H1,...)
  stsearch: chmod($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: chown($H1,...)
  stsearch: chown($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.3
---
language: !lang 'javascript'
pattern:
  semgrep: close($H1,...)
  stsearch: close($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.4
---
language: !lang 'javascript'
pattern:
  semgrep: copyFile($H1,...)
  stsearch: copyFile($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.5
---
language: !lang 'javascript'
pattern:
  semgrep: copyFile($H1, $H2,...)
  stsearch: copyFile($_, $_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.6
---
language: !lang 'javascript'
pattern:
  semgrep: cp($H1, ...)
  stsearch: cp($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.7
---
language: !lang 'javascript'
pattern:
  semgrep: cp($H1, $H2, ...)
  stsearch: cp($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.8
---
language: !lang 'javascript'
pattern:
  semgrep: createReadStream($H1,...)
  stsearch: createReadStream($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.9
---
language: !lang 'javascript'
pattern:
  semgrep: createWriteStream($H1,...)
  stsearch: createWriteStream($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.10
---
language: !lang 'javascript'
pattern:
  semgrep: exists($H1, ...)
  stsearch: exists($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.11
---
language: !lang 'javascript'
pattern:
  semgrep: fchmod($H1, ...)
  stsearch: fchmod($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.12
---
language: !lang 'javascript'
pattern:
  semgrep: fchown($H1, ...)
  stsearch: fchown($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.13
---
language: !lang 'javascript'
pattern:
  semgrep: fdatasync($H1, ...)
  stsearch: fdatasync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.14
---
language: !lang 'javascript'
pattern:
  semgrep: fstat($H1, ...)
  stsearch: fstat($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.15
---
language: !lang 'javascript'
pattern:
  semgrep: fsync($H1, ...)
  stsearch: fsync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.16
---
language: !lang 'javascript'
pattern:
  semgrep: ftruncate($H1, ...)
  stsearch: ftruncate($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.17
---
language: !lang 'javascript'
pattern:
  semgrep: futimes($H1, ...)
  stsearch: futimes($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.18
---
language: !lang 'javascript'
pattern:
  semgrep: lchmod($H1, ...)
  stsearch: lchmod($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.19
---
language: !lang 'javascript'
pattern:
  semgrep: lchown($H1, ...)
  stsearch: lchown($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.20
---
language: !lang 'javascript'
pattern:
  semgrep: lutimes($H1, ...)
  stsearch: lutimes($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.21
---
language: !lang 'javascript'
pattern:
  semgrep: link($H1, ...)
  stsearch: link($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.22
---
language: !lang 'javascript'
pattern:
  semgrep: link($H1, $H2, ...)
  stsearch: link($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.23
---
language: !lang 'javascript'
pattern:
  semgrep: lstat($H1, ...)
  stsearch: lstat($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.24
---
language: !lang 'javascript'
pattern:
  semgrep: mkdir($H1, ...)
  stsearch: mkdir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.25
---
language: !lang 'javascript'
pattern:
  semgrep: mkdtemp($H1, ...)
  stsearch: mkdtemp($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.26
---
language: !lang 'javascript'
pattern:
  semgrep: open($H1, ...)
  stsearch: open($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.27
---
language: !lang 'javascript'
pattern:
  semgrep: opendir($H1, ...)
  stsearch: opendir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.28
---
language: !lang 'javascript'
pattern:
  semgrep: read($H1, ...)
  stsearch: read($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.29
  - detect-non-literal-fs-filename.sinks.1.2.30
---
language: !lang 'javascript'
pattern:
  semgrep: readdir($H1, ...)
  stsearch: readdir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.31
---
language: !lang 'javascript'
pattern:
  semgrep: readFile($H1, ...)
  stsearch: readFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.32
---
language: !lang 'javascript'
pattern:
  semgrep: readlink($H1, ...)
  stsearch: readlink($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.33
---
language: !lang 'javascript'
pattern:
  semgrep: readv($H1, ...)
  stsearch: readv($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.34
---
language: !lang 'javascript'
pattern:
  semgrep: realpath($H1, ...)
  stsearch: realpath($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.35
---
language: !lang 'javascript'
pattern:
  semgrep: realpath.native($H1, ...)
  stsearch: realpath.native($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.36
---
language: !lang 'javascript'
pattern:
  semgrep: rename($H1, ...)
  stsearch: rename($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.37
---
language: !lang 'javascript'
pattern:
  semgrep: rename($H1, $H2, ...)
  stsearch: rename($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.38
---
language: !lang 'javascript'
pattern:
  semgrep: rmdir($H1, ...)
  stsearch: rmdir($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.39
---
language: !lang 'javascript'
pattern:
  semgrep: rm($H1, ...)
  stsearch: rm($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.40
---
language: !lang 'javascript'
pattern:
  semgrep: stat($H1, ...)
  stsearch: stat($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.41
---
language: !lang 'javascript'
pattern:
  semgrep: symlink($H1, $H2, ...)
  stsearch: symlink($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.42
---
language: !lang 'javascript'
pattern:
  semgrep: symlink($H1, ...)
  stsearch: symlink($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.43
---
language: !lang 'javascript'
pattern:
  semgrep: truncate($H1, ...)
  stsearch: truncate($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.44
---
language: !lang 'javascript'
pattern:
  semgrep: unlink($H1, ...)
  stsearch: unlink($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.45
---
language: !lang 'javascript'
pattern:
  semgrep: unwatchFile($H1, ...)
  stsearch: unwatchFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.46
---
language: !lang 'javascript'
pattern:
  semgrep: utimes($H1, ...)
  stsearch: utimes($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.47
---
language: !lang 'javascript'
pattern:
  semgrep: watch($H1, ...)
  stsearch: watch($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.48
---
language: !lang 'javascript'
pattern:
  semgrep: watchFile($H1, ...)
  stsearch: watchFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.49
---
language: !lang 'javascript'
pattern:
  semgrep: write($H1, ...)
  stsearch: write($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.50
---
language: !lang 'javascript'
pattern:
  semgrep: writeFile($H1, ...)
  stsearch: writeFile($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.51
---
language: !lang 'javascript'
pattern:
  semgrep: writev($H1, ...)
  stsearch: writev($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.52
---
language: !lang 'javascript'
pattern:
  semgrep: accessSync($H1, ...)
  stsearch: accessSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.53
---
language: !lang 'javascript'
pattern:
  semgrep: appendFileSync($H1, ...)
  stsearch: appendFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.54
---
language: !lang 'javascript'
pattern:
  semgrep: chmodSync($H1, ...)
  stsearch: chmodSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.55
---
language: !lang 'javascript'
pattern:
  semgrep: chownSync($H1, ...)
  stsearch: chownSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.56
---
language: !lang 'javascript'
pattern:
  semgrep: closeSync($H1, ...)
  stsearch: closeSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.57
---
language: !lang 'javascript'
pattern:
  semgrep: copyFileSync($H1, ...)
  stsearch: copyFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.58
---
language: !lang 'javascript'
pattern:
  semgrep: copyFileSync($H1, $H2, ...)
  stsearch: copyFileSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.59
---
language: !lang 'javascript'
pattern:
  semgrep: cpSync($H1, ...)
  stsearch: cpSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.60
---
language: !lang 'javascript'
pattern:
  semgrep: cpSync($H1, $H2, ...)
  stsearch: cpSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.61
---
language: !lang 'javascript'
pattern:
  semgrep: existsSync($H1, ...)
  stsearch: existsSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.62
---
language: !lang 'javascript'
pattern:
  semgrep: fchmodSync($H1, ...)
  stsearch: fchmodSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.63
---
language: !lang 'javascript'
pattern:
  semgrep: fchownSync($H1, ...)
  stsearch: fchownSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.64
---
language: !lang 'javascript'
pattern:
  semgrep: fdatasyncSync($H1, ...)
  stsearch: fdatasyncSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.65
---
language: !lang 'javascript'
pattern:
  semgrep: fstatSync($H1, ...)
  stsearch: fstatSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.66
---
language: !lang 'javascript'
pattern:
  semgrep: fsyncSync($H1, ...)
  stsearch: fsyncSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.67
---
language: !lang 'javascript'
pattern:
  semgrep: ftruncateSync($H1, ...)
  stsearch: ftruncateSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.68
---
language: !lang 'javascript'
pattern:
  semgrep: futimesSync($H1, ...)
  stsearch: futimesSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.69
---
language: !lang 'javascript'
pattern:
  semgrep: lchmodSync($H1, ...)
  stsearch: lchmodSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.70
---
language: !lang 'javascript'
pattern:
  semgrep: lchownSync($H1, ...)
  stsearch: lchownSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.71
---
language: !lang 'javascript'
pattern:
  semgrep: lutimesSync($H1, ...)
  stsearch: lutimesSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.72
---
language: !lang 'javascript'
pattern:
  semgrep: linkSync($H1, ...)
  stsearch: linkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.73
---
language: !lang 'javascript'
pattern:
  semgrep: linkSync($H1, $H2, ...)
  stsearch: linkSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.74
---
language: !lang 'javascript'
pattern:
  semgrep: lstatSync($H1, ...)
  stsearch: lstatSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.75
---
language: !lang 'javascript'
pattern:
  semgrep: mkdirSync($H1, ...)
  stsearch: mkdirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.76
---
language: !lang 'javascript'
pattern:
  semgrep: mkdtempSync($H1, ...)
  stsearch: mkdtempSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.77
---
language: !lang 'javascript'
pattern:
  semgrep: opendirSync($H1, ...)
  stsearch: opendirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.78
---
language: !lang 'javascript'
pattern:
  semgrep: openSync($H1, ...)
  stsearch: openSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.79
---
language: !lang 'javascript'
pattern:
  semgrep: readdirSync($H1, ...)
  stsearch: readdirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.80
---
language: !lang 'javascript'
pattern:
  semgrep: readFileSync($H1, ...)
  stsearch: readFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.81
---
language: !lang 'javascript'
pattern:
  semgrep: readlinkSync($H1, ...)
  stsearch: readlinkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.82
---
language: !lang 'javascript'
pattern:
  semgrep: readSync($H1, ...)
  stsearch: readSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.83
  - detect-non-literal-fs-filename.sinks.1.2.84
---
language: !lang 'javascript'
pattern:
  semgrep: readvSync($H1, ...)
  stsearch: readvSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.85
---
language: !lang 'javascript'
pattern:
  semgrep: realpathync($H1, ...)
  stsearch: realpathync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.86
---
language: !lang 'javascript'
pattern:
  semgrep: realpathSync.native($H1, ...)
  stsearch: realpathSync.native($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.87
---
language: !lang 'javascript'
pattern:
  semgrep: renameSync($H1, ...)
  stsearch: renameSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.88
---
language: !lang 'javascript'
pattern:
  semgrep: renameSync($H1, $H2, ...)
  stsearch: renameSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.89
---
language: !lang 'javascript'
pattern:
  semgrep: rmdirSync($H1, ...)
  stsearch: rmdirSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.90
---
language: !lang 'javascript'
pattern:
  semgrep: rmSync($H1, ...)
  stsearch: rmSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.91
---
language: !lang 'javascript'
pattern:
  semgrep: statSync($H1, ...)
  stsearch: statSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.92
---
language: !lang 'javascript'
pattern:
  semgrep: symlinkSync($H1, ...)
  stsearch: symlinkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.93
---
language: !lang 'javascript'
pattern:
  semgrep: symlinkSync($H1, $H2, ...)
  stsearch: symlinkSync($_, $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.94
---
language: !lang 'javascript'
pattern:
  semgrep: truncateSync($H1, ...)
  stsearch: truncateSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.95
---
language: !lang 'javascript'
pattern:
  semgrep: unlinkSync($H1, ...)
  stsearch: unlinkSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.96
---
language: !lang 'javascript'
pattern:
  semgrep: utimesSync($H1, ...)
  stsearch: utimesSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.97
---
language: !lang 'javascript'
pattern:
  semgrep: writeFileSync($H1, ...)
  stsearch: writeFileSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.98
---
language: !lang 'javascript'
pattern:
  semgrep: writeSync($H1, ...)
  stsearch: writeSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.99
---
language: !lang 'javascript'
pattern:
  semgrep: writevSync($H1, ...)
  stsearch: writevSync($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-fs-filename.yaml'
  keys:
  - detect-non-literal-fs-filename.sinks.1.2.100
---
language: !lang 'javascript'
pattern:
  semgrep: function ... (...,$H1,...) {...}
  stsearch: function ... (...$_...) {...}
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-regexp.yaml'
  keys:
  - detect-non-literal-regexp.sources.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sources.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: new RegExp($H1, ...)
  stsearch: new RegExp($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-regexp.yaml'
  keys:
  - detect-non-literal-regexp.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: RegExp($H1, ...)
  stsearch: RegExp($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-regexp.yaml'
  keys:
  - detect-non-literal-regexp.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: RegExp("...", ...)
  stsearch: RegExp("..." ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-regexp.yaml'
  keys:
  - detect-non-literal-regexp.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: new RegExp("...", ...)
  stsearch: new RegExp("..." ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-regexp.yaml'
  keys:
  - detect-non-literal-regexp.sinks.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: RegExp(/.../, ...)
  stsearch: RegExp(/.../ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-regexp.yaml'
  keys:
  - detect-non-literal-regexp.sinks.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: new RegExp(/.../, ...)
  stsearch: new RegExp(/.../ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/detect-non-literal-regexp.yaml'
  keys:
  - detect-non-literal-regexp.sinks.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.createHmac($H2, '...')
  stsearch: $_.createHmac($_, '...')
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/hardcoded-hmac-key.yaml'
  keys:
  - hardcoded-hmac-key.0
---
language: !lang 'javascript'
pattern:
  semgrep: const $H1 = '...'
  stsearch: const $_ = '...'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/hardcoded-hmac-key.yaml'
  keys:
  - hardcoded-hmac-key.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.createHmac($H2, $H3)
  stsearch: $_.createHmac($_, $_)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/hardcoded-hmac-key.yaml'
  keys:
  - hardcoded-hmac-key.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.replace($H2, ...)
  stsearch: $_.replace($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/incomplete-sanitization.yaml'
  keys:
  - incomplete-sanitization.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.createHash("md5")
  stsearch: $_.createHash("md5")
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/md5-used-as-password.yaml'
  keys:
  - md5-used-as-password.sources.0
---
language: !lang 'javascript'
pattern:
  semgrep: function ... (...,{...,$H1,...},...) {...}
  stsearch: function ... (...{...$_...}...) {...}
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml'
  keys:
  - path-join-resolve-traversal.sources.0.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1[$H2] = $H3
  stsearch: $_[$_] = $_
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1[$H2] = '...'
  stsearch: $_[$_] = '...'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2[$H3]
  stsearch: $_ = $_[$_]
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    if (...) {
     ...
    }
  stsearch: |-
    if (...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.3
  - prototype-pollution-assignment.4
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.7
---
language: !lang 'javascript'
pattern:
  semgrep: '''constructor'''
  stsearch: '''constructor'''
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: '''__proto__'''
  stsearch: '''__proto__'''
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.4.0
---
language: !lang 'javascript'
pattern:
  semgrep: for(var $H1 = $H2; ...; ...) {...}
  stsearch: for(var $_ = $_; ...; ...) {...}
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.5
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.2
---
language: !lang 'javascript'
pattern:
  semgrep: for($H1 = $H2; ...; ...) {...}
  stsearch: for($_ = $_; ...; ...) {...}
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.6
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.forEach(function $H2($H3, $H4,...) {...})
  stsearch: $_.forEach(function $_($_, $_...) {...})
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.7
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.4
---
language: !lang 'javascript'
pattern:
  semgrep: '"..."'
  stsearch: '"..."'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-assignment.yaml'
  keys:
  - prototype-pollution-assignment.8.meta.0
  - prototype-pollution-assignment.9.meta.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.5.meta.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/unknown-value-with-script-tag.yaml'
  keys:
  - unknown-value-with-script-tag.1.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.1.meta.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2[$H3] = $H4
  stsearch: $_ = $_[$_] = $_
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2[$H3] && $H4
  stsearch: $_ = $_[$_] && $_
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2[$H3] || $H4
  stsearch: $_ = $_[$_] || $_
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    for(...) {
     ...
    }
  stsearch: |-
    for(...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    while(...) {
     ...
    }
  stsearch: |-
    while(...) {
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1.forEach(function $H2(...) {
     ...
    })
  stsearch: |-
    $_.forEach(function $_(...) {
     ...
    })
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/prototype-pollution/prototype-pollution-loop.yaml'
  keys:
  - prototype-pollution-loop.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: 'spawn(...,{shell: $H1})'
  stsearch: 'spawn(...{shell: $_})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: 'spawnSync(...,{shell: $H1})'
  stsearch: 'spawnSync(...{shell: $_})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.spawn(...,{shell: $H2})'
  stsearch: '$_.spawn(...{shell: $_})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.spawnSync(...,{shell: $H2})'
  stsearch: '$_.spawnSync(...{shell: $_})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: 'spawn(...,{shell: false})'
  stsearch: 'spawn(...{shell: false})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.1
---
language: !lang 'javascript'
pattern:
  semgrep: 'spawnSync(...,{shell: false})'
  stsearch: 'spawnSync(...{shell: false})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.spawn(...,{shell: false})'
  stsearch: '$_.spawn(...{shell: false})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.3
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.spawnSync(...,{shell: false})'
  stsearch: '$_.spawnSync(...{shell: false})'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/spawn-shell-true.yaml'
  keys:
  - spawn-shell-true.4
---
language: !lang 'javascript'
pattern:
  semgrep: parseInt(...)
  stsearch: parseInt(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-knex-sqli.yaml'
  keys:
  - node-knex-sqli.sanitizers.0.0
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sanitizers.0.0
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sanitizers.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: require('mssql')
  stsearch: require('mssql')
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mssql-sqli.yaml'
  keys:
  - node-mssql-sqli.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'mssql'
  stsearch: import 'mssql'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mssql-sqli.yaml'
  keys:
  - node-mssql-sqli.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = $H2.request(...)
  stsearch: $_ = $_.request(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mssql-sqli.yaml'
  keys:
  - node-mssql-sqli.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.query($H2,...)
  stsearch: $_.query($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mssql-sqli.yaml'
  keys:
  - node-mssql-sqli.sinks.0.2
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-postgres-sqli.yaml'
  keys:
  - node-postgres-sqli.sinks.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: 'function ... (..., $H1: number,...) {...}'
  stsearch: 'function ... (... $_: number...) {...}'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sources.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from "$H2"
  stsearch: import $_ from "$_"
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sinks.0.2.0
---
language: !lang 'javascript'
pattern:
  semgrep: import { ... } from "$H1"
  stsearch: import { ... } from "$_"
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sinks.0.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from "$H2"
  stsearch: import * as $_ from "$_"
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sinks.0.2.2
---
language: !lang 'javascript'
pattern:
  semgrep: require("$H1")
  stsearch: require("$_")
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-mysql-sqli.yaml'
  keys:
  - node-mysql-sqli.sinks.0.2.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    const { $H1 } = require('pg')
    ...
    $H2 = new $H3(...)
  stsearch: |-
    const { $_ } = require('pg')
    ...
    $_ = new $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-postgres-sqli.yaml'
  keys:
  - node-postgres-sqli.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    const { $H1 } = require('pg')
    ...
    const $H2 = new $H3(...)
    ...
    $H4.connect((..., $H5, ...) => {
     ...
    })
  stsearch: |-
    const { $_ } = require('pg')
    ...
    const $_ = new $_(...)
    ...
    $_.connect((... $_ ...) => {
     ...
    })
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/sqli/node-postgres-sqli.yaml'
  keys:
  - node-postgres-sqli.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $H2(...);
    ...
    $H3(...);
  stsearch: |-
    $_ = $_(...);
    ...
    $_(...);
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unknown-value-with-script-tag.yaml'
  keys:
  - unknown-value-with-script-tag.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1[$H2](...)
  stsearch: $_[$_](...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $H2[$H3]
    ...
    $H4(...)
  stsearch: |-
    $_ = $_[$_]
    ...
    $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: for (...) {...}
  stsearch: for (...) {...}
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.hasOwnProperty(...)
  stsearch: $_.hasOwnProperty(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-dynamic-method.yaml'
  keys:
  - unsafe-dynamic-method.7.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.concat($H2)
  stsearch: $_.concat($_)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sources.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '"..." + "..."'
  stsearch: '"..." + "..."'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sources.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.concat("...")
  stsearch: $_.concat("...")
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sources.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: console.$H1($H2,$H3,...)
  stsearch: console.$_($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('util')
  stsearch: $_ = require('util')
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sinks.0.1.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.format($H2,$H3,...)
  stsearch: $_.format($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/unsafe-formatstring.yaml'
  keys:
  - unsafe-formatstring.sinks.0.1.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'vm'
  stsearch: import * as $_ from 'vm'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'vm'
  stsearch: import $_ from 'vm'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInContext($H2,$H3,...)
  stsearch: $_.runInContext($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.runInNewContext($H2,$H3,...)
  stsearch: $_.runInNewContext($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1.compileFunction($H2,$H3,{parsingContext: $H4},...)'
  stsearch: '$_.compileFunction($_,$_,{parsingContext: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = {parsingContext: $H2};
    ...
    $H3.compileFunction($H4,$H5,$H6,...)
  stsearch: |-
    $_ = {parsingContext: $_};
    ...
    $_.compileFunction($_,$_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.0.1.7
---
language: !lang 'javascript'
pattern:
  semgrep: vm.runInContext($H1,$H2,...)
  stsearch: vm.runInContext($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: vm.runInContext($H1,...)
  stsearch: vm.runInContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: vm.runInNewContext($H1,$H2,...)
  stsearch: vm.runInNewContext($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: vm.runInNewContext($H1,...)
  stsearch: vm.runInNewContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: vm.runInThisContext($H1,...)
  stsearch: vm.runInThisContext($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: vm.compileFunction($H1,...)
  stsearch: vm.compileFunction($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: 'vm.compileFunction($H1,$H2,{parsingContext: $H3},...)'
  stsearch: 'vm.compileFunction($_,$_,{parsingContext: $_}...)'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = {parsingContext: $H2};
    ...
    vm.compileFunction($H3,$H4,$H5,...)
  stsearch: |-
    $_ = {parsingContext: $_};
    ...
    vm.compileFunction($_,$_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.7
---
language: !lang 'javascript'
pattern:
  semgrep: new vm.Script($H1,...)
  stsearch: new vm.Script($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.8
---
language: !lang 'javascript'
pattern:
  semgrep: new vm.SourceTextModule($H1,...)
  stsearch: new vm.SourceTextModule($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/audit/vm-injection.yaml'
  keys:
  - vm-runincontext-context-injection.sinks.1.0.9
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(..., true)
  stsearch: $_.$_(... true)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-buffer-noassert.yaml'
  keys:
  - detect-buffer-noassert.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('child_process')
  stsearch: $_ = require('child_process')
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: import * as $H1 from 'child_process'
  stsearch: import * as $_ from 'child_process'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import $H1 from 'child_process'
  stsearch: import $_ from 'child_process'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2("...",...)
  stsearch: $_.$_("..."...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.$H2(["...",...],...)
  stsearch: $_.$_(["..."...]...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = ["...",...]
  stsearch: $_ = ["..."...]
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.0.5
  - detect-child-process.sinks.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: child_process.exec($H1,...)
  stsearch: child_process.exec($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.1.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: child_process.execSync($H1,...)
  stsearch: child_process.execSync($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.1.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: child_process.spawn($H1,...)
  stsearch: child_process.spawn($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.1.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: child_process.spawnSync($H1,...)
  stsearch: child_process.spawnSync($_...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.1.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: child_process.$H1("...",...)
  stsearch: child_process.$_("..."...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: child_process.$H1(["...",...],...)
  stsearch: child_process.$_(["..."...]...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-child-process.yaml'
  keys:
  - detect-child-process.sinks.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.escapeMarkup = false
  stsearch: $_.escapeMarkup = false
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-disable-mustache-escape.yaml'
  keys:
  - detect-disable-mustache-escape
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = new
    URLSearchParams($H2. ... .location.hash.substring(1))
  stsearch: |-
    $_ = new
    URLSearchParams($_... .location.hash.substring(1))
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sources.1.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: window.eval(...)
  stsearch: window.eval(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: new Function(...)
  stsearch: new Function(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: new Function(...)(...)
  stsearch: new Function(...)(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sinks.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: setTimeout(...)
  stsearch: setTimeout(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sinks.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: setInterval(...)
  stsearch: setInterval(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sinks.0.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: location.href = $H1(...)
  stsearch: location.href = $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sanitizers.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: location.hash = $H1(...)
  stsearch: location.hash = $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sanitizers.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: location.search = $H1(...)
  stsearch: location.search = $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sanitizers.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.href = $H2(...)
  stsearch: $_... .location.href = $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sanitizers.0.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.hash = $H2(...)
  stsearch: $_... .location.hash = $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sanitizers.0.0.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .location.search = $H2(...)
  stsearch: $_... .location.search = $_(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-eval-with-expression.yaml'
  keys:
  - detect-eval-with-expression.sanitizers.0.0.5
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    express.csrf();
    ...
    express.methodOverride();
  stsearch: |-
    express.csrf();
    ...
    express.methodOverride();
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-no-csrf-before-method-override.yaml'
  keys:
  - detect-no-csrf-before-method-override
---
language: !lang 'javascript'
pattern:
  semgrep: crypto.pseudoRandomBytes
  stsearch: crypto.pseudoRandomBytes
locations:
- path: !path 'semgrep-rules/javascript/lang/security/detect-pseudoRandomBytes.yaml'
  keys:
  - detect-pseudoRandomBytes
---
language: !lang 'javascript'
pattern:
  semgrep: '`...${$H1}$H2`'
  stsearch: '`...${$_}$_`'
locations:
- path: !path 'semgrep-rules/javascript/lang/security/html-in-template-string.yaml'
  keys:
  - html-in-template-string.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: JSON.parse(...)
  stsearch: JSON.parse(...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/insecure-object-assign.yaml'
  keys:
  - insecure-object-assign.sources.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: JSON.parse("...",...)
  stsearch: JSON.parse("..."...)
locations:
- path: !path 'semgrep-rules/javascript/lang/security/insecure-object-assign.yaml'
  keys:
  - insecure-object-assign.sources.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: spawn('git', ['clone',...,$H1])
  stsearch: spawn('git', ['clone'...$_])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawn('git', ['clone',...,$H2])
  stsearch: $_.spawn('git', ['clone'...$_])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: spawn('git', ['clone',...,$H1,$H2])
  stsearch: spawn('git', ['clone'...$_,$_])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawn('git', ['clone',...,$H2,$H3])
  stsearch: $_.spawn('git', ['clone'...$_,$_])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: spawn('git', ['clone',...,"..."])
  stsearch: spawn('git', ['clone'..."..."])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawn('git', ['clone',...,"..."])
  stsearch: $_.spawn('git', ['clone'..."..."])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.2
---
language: !lang 'javascript'
pattern:
  semgrep: spawn('git', ['clone',...,"...","..."])
  stsearch: spawn('git', ['clone'..."...","..."])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.spawn('git', ['clone',...,"...","..."])
  stsearch: $_.spawn('git', ['clone'..."...","..."])
locations:
- path: !path 'semgrep-rules/javascript/lang/security/spawn-git-clone.yaml'
  keys:
  - spawn-git-clone.4
---
language: !lang 'javascript'
pattern:
  semgrep: import "monaco-editor"
  stsearch: import "monaco-editor"
locations:
- path: !path 'semgrep-rules/javascript/monaco-editor/security/audit/monaco-hover-htmlsupport.yaml'
  keys:
  - monaco-hover-htmlsupport.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: require("monaco-editor")
  stsearch: require("monaco-editor")
locations:
- path: !path 'semgrep-rules/javascript/monaco-editor/security/audit/monaco-hover-htmlsupport.yaml'
  keys:
  - monaco-hover-htmlsupport.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '{value: $H1, supportHtml: true}'
  stsearch: '{value: $_, supportHtml: true}'
locations:
- path: !path 'semgrep-rules/javascript/monaco-editor/security/audit/monaco-hover-htmlsupport.yaml'
  keys:
  - monaco-hover-htmlsupport.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{value: $H1, isTrusted: true}'
  stsearch: '{value: $_, isTrusted: true}'
locations:
- path: !path 'semgrep-rules/javascript/monaco-editor/security/audit/monaco-hover-htmlsupport.yaml'
  keys:
  - monaco-hover-htmlsupport.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: '{range: $H1, contents: [...]}'
  stsearch: '{range: $_, contents: [...]}'
locations:
- path: !path 'semgrep-rules/javascript/monaco-editor/security/audit/monaco-hover-htmlsupport.yaml'
  keys:
  - monaco-hover-htmlsupport.2
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., value: "...", ...}'
  stsearch: '{... value: "..." ...}'
locations:
- path: !path 'semgrep-rules/javascript/monaco-editor/security/audit/monaco-hover-htmlsupport.yaml'
  keys:
  - monaco-hover-htmlsupport.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require('node-expat');
    ...
    new $H2.Parser(...);
    ...
    $H3.parse(...);
  stsearch: |-
    var $_ = require('node-expat');
    ...
    new $_.Parser(...);
    ...
    $_.parse(...);
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require('node-expat');
    ...
    new $H2.Parser(...);
    ...
    $H3.write(...);
  stsearch: |-
    var $_ = require('node-expat');
    ...
    new $_.Parser(...);
    ...
    $_.write(...);
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $H1.parse(...);
  stsearch: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $_.parse(...);
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $H1.write(...);
  stsearch: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $_.write(...);
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.0.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require('node-expat');
    ...
    new $H2.Parser(...);
    ...
    $H3.parse("...");
  stsearch: |-
    var $_ = require('node-expat');
    ...
    new $_.Parser(...);
    ...
    $_.parse("...");
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require('node-expat');
    ...
    new $H2.Parser(...);
    ...
    $H3.write("...");
  stsearch: |-
    var $_ = require('node-expat');
    ...
    new $_.Parser(...);
    ...
    $_.write("...");
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $H1.parse("...");
  stsearch: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $_.parse("...");
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $H1.write("...");
  stsearch: |-
    require('node-expat');
    ...
    new Parser(...);
    ...
    $_.write("...");
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.4
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = "...";
    ...
    $H2.parse($H3);
  stsearch: |-
    $_ = "...";
    ...
    $_.parse($_);
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.5
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = "...";
    ...
    $H2.write($H3);
  stsearch: |-
    $_ = "...";
    ...
    $_.write($_);
locations:
- path: !path 'semgrep-rules/javascript/node-expat/security/audit/expat-xxe.yaml'
  keys:
  - expat-xxe.6
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., clientSecret: "...", ...}'
  stsearch: '{... clientSecret: "..." ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., secretOrKey: "...", ...}'
  stsearch: '{... secretOrKey: "..." ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., consumerSecret: "...", ...}'
  stsearch: '{... consumerSecret: "..." ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = {}
  stsearch: $_ = {}
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.clientSecret = "..."
  stsearch: $_.clientSecret = "..."
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.3.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.secretOrKey = "..."
  stsearch: $_.secretOrKey = "..."
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.3.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.consumerSecret = "..."
  stsearch: $_.consumerSecret = "..."
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.3.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = '...'
  stsearch: $_ = '...'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.4.0
  - hardcoded-passport-secret.sources.0.0.5.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., clientSecret: $H1, ...}'
  stsearch: '{... clientSecret: $_ ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.4.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., secretOrKey: $H1, ...}'
  stsearch: '{... secretOrKey: $_ ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.4.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: '{..., consumerSecret: $H1, ...}'
  stsearch: '{... consumerSecret: $_ ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.4.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1 = {..., clientSecret: $H2, ...}'
  stsearch: '$_ = {... clientSecret: $_ ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.5.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1 = {..., secretOrKey: $H2, ...}'
  stsearch: '$_ = {... secretOrKey: $_ ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.5.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1 = {..., consumerSecret: $H2, ...}'
  stsearch: '$_ = {... consumerSecret: $_ ...}'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sources.0.0.5.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("$H2").Strategy
  stsearch: $_ = require("$_").Strategy
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sinks.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require("$H2")
  stsearch: $_ = require("$_")
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sinks.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: import { $H1 as $H2 } from '$H3'
  stsearch: import { $_ as $_ } from '$_'
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sinks.0.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1($H2,...)
  stsearch: new $_($_...)
locations:
- path: !path 'semgrep-rules/javascript/passport-jwt/security/passport-hardcode.yaml'
  keys:
  - hardcoded-passport-secret.sinks.0.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('phantom')
  stsearch: $_ = require('phantom')
locations:
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.open("...",...)
  stsearch: $_.open("..."...)
locations:
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.property("content","...",...)
  stsearch: $_.property("content","..."...)
locations:
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.setContent("...",...)
  stsearch: $_.setContent("..."...)
locations:
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.4
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-setcontent-injection.yaml'
  keys:
  - playwright-setcontent-injection.3
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-setcontent-injection.yaml'
  keys:
  - puppeteer-setcontent-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.openUrl("...",...)
  stsearch: $_.openUrl("..."...)
locations:
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateJavaScript("...",...)
  stsearch: $_.evaluateJavaScript("..."...)
locations:
- path: !path 'semgrep-rules/javascript/phantom/security/audit/phantom-injection.yaml'
  keys:
  - phantom-injection.6
---
language: !lang 'javascript'
pattern:
  semgrep: require('playwright')
  stsearch: require('playwright')
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-addinitscript-code-injection.yaml'
  keys:
  - playwright-addinitscript-code-injection.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-arg-injection.yaml'
  keys:
  - playwright-evaluate-arg-injection.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-exposed-chrome-devtools.yaml'
  keys:
  - playwright-exposed-chrome-devtools.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-goto-injection.yaml'
  keys:
  - playwright-goto-injection.0
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-setcontent-injection.yaml'
  keys:
  - playwright-setcontent-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: var $H1 = function $H2(...){...}
  stsearch: var $_ = function $_(...){...}
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-addinitscript-code-injection.yaml'
  keys:
  - playwright-addinitscript-code-injection.1
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.1
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.addInitScript($H2,...)
  stsearch: $_.addInitScript($_...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-addinitscript-code-injection.yaml'
  keys:
  - playwright-addinitscript-code-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.addInitScript("...",...)
  stsearch: $_.addInitScript("..."...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-addinitscript-code-injection.yaml'
  keys:
  - playwright-addinitscript-code-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.addInitScript(function(...){...},...)
  stsearch: $_.addInitScript(function(...){...}...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-addinitscript-code-injection.yaml'
  keys:
  - playwright-addinitscript-code-injection.4
---
language: !lang 'javascript'
pattern:
  semgrep: function $H1 (...,$H2,...) {...}
  stsearch: function $_ (...$_...) {...}
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-arg-injection.yaml'
  keys:
  - playwright-evaluate-arg-injection.1.0
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-arg-injection.yaml'
  keys:
  - puppeteer-evaluate-arg-injection.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluate("...",...)
  stsearch: $_.evaluate("..."...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.3
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluate(function(...){...},...)
  stsearch: $_.evaluate(function(...){...}...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.4
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.4
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateHandle("...",...)
  stsearch: $_.evaluateHandle("..."...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.5
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.5
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateHandle(function(...){...},...)
  stsearch: $_.evaluateHandle(function(...){...}...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.6
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.6
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateOnNewDocument("...",...)
  stsearch: $_.evaluateOnNewDocument("..."...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.7
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.7
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.evaluateOnNewDocument(function(...){...},...)
  stsearch: $_.evaluateOnNewDocument(function(...){...}...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-evaluate-code-injection.yaml'
  keys:
  - playwright-evaluate-code-injection.8
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-evaluate-code-injection.yaml'
  keys:
  - puppeteer-evaluate-code-injection.8
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('playwright');
    ...
    var $H1 = "...";
    ...
    $H2.goto($H3,...)
  stsearch: |-
    require('playwright');
    ...
    var $_ = "...";
    ...
    $_.goto($_...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-goto-injection.yaml'
  keys:
  - playwright-goto-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.goto("...",...)
  stsearch: $_.goto("..."...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-goto-injection.yaml'
  keys:
  - playwright-goto-injection.3
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-goto-injection.yaml'
  keys:
  - puppeteer-goto-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('playwright');
    ...
    var $H1 = "...";
    ...
    $H2.setContent($H3,...)
  stsearch: |-
    require('playwright');
    ...
    var $_ = "...";
    ...
    $_.setContent($_...)
locations:
- path: !path 'semgrep-rules/javascript/playwright/security/audit/playwright-setcontent-injection.yaml'
  keys:
  - playwright-setcontent-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('puppeteer');
    ...
    var $H1 = "...";
    ...
    $H2.goto($H3,...)
  stsearch: |-
    require('puppeteer');
    ...
    var $_ = "...";
    ...
    $_.goto($_...)
locations:
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-goto-injection.yaml'
  keys:
  - puppeteer-goto-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('puppeteer');
    ...
    var $H1 = "...";
  stsearch: |-
    require('puppeteer');
    ...
    var $_ = "...";
locations:
- path: !path 'semgrep-rules/javascript/puppeteer/security/audit/puppeteer-setcontent-injection.yaml'
  keys:
  - puppeteer-setcontent-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1($H2)
  stsearch: $_($_)
locations:
- path: !path 'semgrep-rules/javascript/react/correctness/hooks/set-state-no-op.yaml'
  keys:
  - calling-set-state-on-current-state.0
---
language: !lang 'javascript'
pattern:
  semgrep: const [$H1, $H2] = useState(...)
  stsearch: const [$_, $_] = useState(...)
locations:
- path: !path 'semgrep-rules/javascript/react/correctness/hooks/set-state-no-op.yaml'
  keys:
  - calling-set-state-on-current-state.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.run($H2,...)
  stsearch: $_.run($_...)
locations:
- path: !path 'semgrep-rules/javascript/sandbox/security/audit/sandbox-code-injection.yaml'
  keys:
  - sandbox-code-injection.2.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1(...).run($H2,...)
  stsearch: new $_(...).run($_...)
locations:
- path: !path 'semgrep-rules/javascript/sandbox/security/audit/sandbox-code-injection.yaml'
  keys:
  - sandbox-code-injection.2.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = new $H2(...);
    ...
    $H3.run("...",...);
  stsearch: |-
    $_ = new $_(...);
    ...
    $_.run("..."...);
locations:
- path: !path 'semgrep-rules/javascript/sandbox/security/audit/sandbox-code-injection.yaml'
  keys:
  - sandbox-code-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: new $H1(...).run("...",...)
  stsearch: new $_(...).run("..."...)
locations:
- path: !path 'semgrep-rules/javascript/sandbox/security/audit/sandbox-code-injection.yaml'
  keys:
  - sandbox-code-injection.4
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('sax');
    ...
    $H1.ondoctype = ...;
  stsearch: |-
    require('sax');
    ...
    $_.ondoctype = ...;
locations:
- path: !path 'semgrep-rules/javascript/sax/security/audit/sax-xxe.yaml'
  keys:
  - sax-xxe.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('sax');
    ...
    $H1.on('doctype',...);
  stsearch: |-
    require('sax');
    ...
    $_.on('doctype'...);
locations:
- path: !path 'semgrep-rules/javascript/sax/security/audit/sax-xxe.yaml'
  keys:
  - sax-xxe.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    {
     host: $H1,
     database: $H2,
     dialect: $H3
     }
  stsearch: |-
    {
     host: $_,
     database: $_,
     dialect: $_
     }
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-enforce-tls.yaml'
  keys:
  - sequelize-enforce-tls.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    {
     host: $H1,
     database: $H2,
     dialect: "postgres",
     dialectOptions: {
     ssl: true
     }
    }
  stsearch: |-
    {
     host: $_,
     database: $_,
     dialect: "postgres",
     dialectOptions: {
     ssl: true
     }
    }
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-enforce-tls.yaml'
  keys:
  - sequelize-enforce-tls.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    {
     host: $H1,
     database: $H2,
     dialect: $H3,
     dialectOptions: {
     ssl: { ... }
     }
    }
  stsearch: |-
    {
     host: $_,
     database: $_,
     dialect: $_,
     dialectOptions: {
     ssl: { ... }
     }
    }
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-enforce-tls.yaml'
  keys:
  - sequelize-enforce-tls.2
---
language: !lang 'javascript'
pattern:
  semgrep: sequelize.query($H1,...)
  stsearch: sequelize.query($_...)
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sinks.0.0.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sequelize.query($H2,...)
  stsearch: $_.sequelize.query($_...)
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sinks.0.0.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1. ... .hash(...)
  stsearch: $_... .hash(...)
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-injection-express.yaml'
  keys:
  - express-sequelize-injection.sanitizers.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sequelize.query(`...${...}...`, ...)
  stsearch: $_.sequelize.query(`...${...}...` ...)
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-raw-query.yaml'
  keys:
  - sequelize-raw-query.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = `...${...}...`
    ...
    $H2.sequelize.query($H3, ...)
  stsearch: |-
    $_ = `...${...}...`
    ...
    $_.sequelize.query($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-raw-query.yaml'
  keys:
  - sequelize-raw-query.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.sequelize.query($H2 + $H3, ...)
  stsearch: $_.sequelize.query($_ + $_ ...)
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-raw-query.yaml'
  keys:
  - sequelize-raw-query.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = $H2 + $H3
    ...
    $H4.sequelize.query($H5, ...)
  stsearch: |-
    $_ = $_ + $_
    ...
    $_.sequelize.query($_ ...)
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-raw-query.yaml'
  keys:
  - sequelize-raw-query.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    {
     host: $H1,
     database: $H2,
     dialect: $H3,
     dialectOptions: {
     ssl: {
     rejectUnauthorized: false
     }
     }
     }
  stsearch: |-
    {
     host: $_,
     database: $_,
     dialect: $_,
     dialectOptions: {
     ssl: {
     rejectUnauthorized: false
     }
     }
     }
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-tls-disabled-cert-validation.yaml'
  keys:
  - sequelize-tls-disabled-cert-validation.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    {
     host: $H1,
     database: $H2,
     dialect: $H3,
     dialectOptions:
     { ssl: ... }
     }
  stsearch: |-
    {
     host: $_,
     database: $_,
     dialect: $_,
     dialectOptions:
     { ssl: ... }
     }
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-weak-tls-version.yaml'
  keys:
  - sequelize-weak-tls-version.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    {
     minVersion: 'TLSv1'
    }
  stsearch: |-
    {
     minVersion: 'TLSv1'
    }
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-weak-tls-version.yaml'
  keys:
  - sequelize-weak-tls-version.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    {
     minVersion: 'TLSv1.1'
    }
  stsearch: |-
    {
     minVersion: 'TLSv1.1'
    }
locations:
- path: !path 'semgrep-rules/javascript/sequelize/security/audit/sequelize-weak-tls-version.yaml'
  keys:
  - sequelize-weak-tls-version.1.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('serialize-javascript')
  stsearch: $_ = require('serialize-javascript')
locations:
- path: !path 'semgrep-rules/javascript/serialize-javascript/security/audit/unsafe-serialize-javascript.yaml'
  keys:
  - unsafe-serialize-javascript.0
---
language: !lang 'javascript'
pattern:
  semgrep: escape(...)
  stsearch: escape(...)
locations:
- path: !path 'semgrep-rules/javascript/serialize-javascript/security/audit/unsafe-serialize-javascript.yaml'
  keys:
  - unsafe-serialize-javascript.1
---
language: !lang 'javascript'
pattern:
  semgrep: encodeURI(...)
  stsearch: encodeURI(...)
locations:
- path: !path 'semgrep-rules/javascript/serialize-javascript/security/audit/unsafe-serialize-javascript.yaml'
  keys:
  - unsafe-serialize-javascript.2
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1(..., {unsafe: true})'
  stsearch: '$_(... {unsafe: true})'
locations:
- path: !path 'semgrep-rules/javascript/serialize-javascript/security/audit/unsafe-serialize-javascript.yaml'
  keys:
  - unsafe-serialize-javascript.3
---
language: !lang 'javascript'
pattern:
  semgrep: require('shelljs')
  stsearch: require('shelljs')
locations:
- path: !path 'semgrep-rules/javascript/shelljs/security/shelljs-exec-injection.yaml'
  keys:
  - shelljs-exec-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('shelljs');
    ...
    var $H1 = "...";
  stsearch: |-
    require('shelljs');
    ...
    var $_ = "...";
locations:
- path: !path 'semgrep-rules/javascript/shelljs/security/shelljs-exec-injection.yaml'
  keys:
  - shelljs-exec-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.exec("...",...)
  stsearch: $_.exec("..."...)
locations:
- path: !path 'semgrep-rules/javascript/shelljs/security/shelljs-exec-injection.yaml'
  keys:
  - shelljs-exec-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1($H2, {multiArgs: ...},...)'
  stsearch: '$_($_, {multiArgs: ...}...)'
locations:
- path: !path 'semgrep-rules/javascript/thenify/security/audit/multiargs-code-execution.yaml'
  keys:
  - multiargs-code-execution.0.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = {multiArgs: ...};
    ...
    $H2($H3,$H4,...);
  stsearch: |-
    $_ = {multiArgs: ...};
    ...
    $_($_,$_...);
locations:
- path: !path 'semgrep-rules/javascript/thenify/security/audit/multiargs-code-execution.yaml'
  keys:
  - multiargs-code-execution.0.1
---
language: !lang 'javascript'
pattern:
  semgrep: '$H1($H2, {multiArgs: false},...)'
  stsearch: '$_($_, {multiArgs: false}...)'
locations:
- path: !path 'semgrep-rules/javascript/thenify/security/audit/multiargs-code-execution.yaml'
  keys:
  - multiargs-code-execution.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = {multiArgs: false};
    ...
    $H2($H3,$H4,...)
  stsearch: |-
    $_ = {multiArgs: false};
    ...
    $_($_,$_...)
locations:
- path: !path 'semgrep-rules/javascript/thenify/security/audit/multiargs-code-execution.yaml'
  keys:
  - multiargs-code-execution.2
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('thenify')
  stsearch: $_ = require('thenify')
locations:
- path: !path 'semgrep-rules/javascript/thenify/security/audit/multiargs-code-execution.yaml'
  keys:
  - multiargs-code-execution.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: import 'thenify'
  stsearch: import 'thenify'
locations:
- path: !path 'semgrep-rules/javascript/thenify/security/audit/multiargs-code-execution.yaml'
  keys:
  - multiargs-code-execution.3.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    require('vm2');
    ...
    $H1 = new VMScript(...);
  stsearch: |-
    require('vm2');
    ...
    $_ = new VMScript(...);
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.2
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = new VM(...);
    ...
    $H2.run($H3,...);
  stsearch: |-
    $_ = new VM(...);
    ...
    $_.run($_...);
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.3.0
---
language: !lang 'javascript'
pattern:
  semgrep: new VM(...).run($H1,...)
  stsearch: new VM(...).run($_...)
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.3.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = new NodeVM(...);
    ...
    $H2.run($H3,...);
  stsearch: |-
    $_ = new NodeVM(...);
    ...
    $_.run($_...);
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.3.2
---
language: !lang 'javascript'
pattern:
  semgrep: new NodeVM(...).run($H1,...)
  stsearch: new NodeVM(...).run($_...)
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.3.3
---
language: !lang 'javascript'
pattern:
  semgrep: new VMScript($H1,...)
  stsearch: new VMScript($_...)
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.3.4
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = new VM(...);
    ...
    $H2.run("...",...);
  stsearch: |-
    $_ = new VM(...);
    ...
    $_.run("..."...);
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.4
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    $H1 = new NodeVM(...);
    ...
    $H2.run("...",...);
  stsearch: |-
    $_ = new NodeVM(...);
    ...
    $_.run("..."...);
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.5
---
language: !lang 'javascript'
pattern:
  semgrep: (new VM(...)).run("...",...)
  stsearch: (new VM(...)).run("..."...)
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.6
---
language: !lang 'javascript'
pattern:
  semgrep: (new NodeVM(...)).run("...",...)
  stsearch: (new NodeVM(...)).run("..."...)
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.7
---
language: !lang 'javascript'
pattern:
  semgrep: new VMScript("...",...)
  stsearch: new VMScript("..."...)
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-code-injection.yaml'
  keys:
  - vm2-code-injection.8
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('vm2')
  stsearch: $_ = require('vm2')
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.1
  - vm2-context-injection.1.2
---
language: !lang 'javascript'
pattern:
  semgrep: '{$H1:$H2}'
  stsearch: '{$_:$_}'
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.2.0
  - vm2-context-injection.1.11.0
  - vm2-context-injection.1.20.0
  - vm2-context-injection.1.29.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = {$H3: ...};
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = {$_: ...};
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     $H3 = {$H4: ...};
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.4
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = {sandbox: ...};
     ...
     new VM($H3,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.5
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     $H3 = {sandbox: ...};
     ...
     new VM($H4,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.6
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = {$H3: ...};
     ...
     $H4 = {sandbox: ...};
     ...
     new VM($H5,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.7
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     $H3 = {$H4: ...};
     ...
     $H5 = {sandbox: ...};
     ...
     new VM($H6,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.8
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.9
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.10
  - vm2-context-injection.1.11
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = {$H4: ...};
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = {$_: ...};
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.12
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     $H4 = {$H5: ...};
     ...
     new VM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     new VM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.13
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = {sandbox: ...};
     ...
     new VM($H4,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.14
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     $H4 = {sandbox: ...};
     ...
     new VM($H5,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.15
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = {$H4: ...};
     ...
     $H5 = {sandbox: ...};
     ...
     new VM($H6,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.16
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     $H4 = {$H5: ...};
     ...
     $H6 = {sandbox: ...};
     ...
     new VM($H7,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new VM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.17
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.18
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.19
  - vm2-context-injection.1.20
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = {$H3: ...};
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = {$_: ...};
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.21
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     $H3 = {$H4: ...};
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.22
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = {sandbox: ...};
     ...
     new NodeVM($H3,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.23
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     $H3 = {sandbox: ...};
     ...
     new NodeVM($H4,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.24
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = {$H3: ...};
     ...
     $H4 = {sandbox: ...};
     ...
     new NodeVM($H5,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.25
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function (...,$H1,...) {
     ...
     $H2 = ...;
     ...
     $H3 = {$H4: ...};
     ...
     $H5 = {sandbox: ...};
     ...
     new NodeVM($H6,...);
     ...
    }
  stsearch: |-
    function (...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.26
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.27
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.28
  - vm2-context-injection.1.29
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = {$H4: ...};
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = {$_: ...};
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.30
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     $H4 = {$H5: ...};
     ...
     new NodeVM({sandbox: ...},...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     new NodeVM({sandbox: ...}...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.31
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = {sandbox: ...};
     ...
     new NodeVM($H4,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.32
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     $H4 = {sandbox: ...};
     ...
     new NodeVM($H5,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.33
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = {$H4: ...};
     ...
     $H5 = {sandbox: ...};
     ...
     new NodeVM($H6,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.34
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    function $H1(...,$H2,...) {
     ...
     $H3 = ...;
     ...
     $H4 = {$H5: ...};
     ...
     $H6 = {sandbox: ...};
     ...
     new NodeVM($H7,...);
     ...
    }
  stsearch: |-
    function $_(...$_...) {
     ...
     $_ = ...;
     ...
     $_ = {$_: ...};
     ...
     $_ = {sandbox: ...};
     ...
     new NodeVM($_...);
     ...
    }
locations:
- path: !path 'semgrep-rules/javascript/vm2/security/audit/vm2-context-injection.yaml'
  keys:
  - vm2-context-injection.1.35
---
language: !lang 'javascript'
pattern:
  semgrep: $H1 = require('wkhtmltoimage')
  stsearch: $_ = require('wkhtmltoimage')
locations:
- path: !path 'semgrep-rules/javascript/wkhtmltoimage/security/audit/wkhtmltoimage-injection.yaml'
  keys:
  - wkhtmltoimage-injection.0
---
language: !lang 'javascript'
pattern:
  semgrep: var $H1 = "..."
  stsearch: var $_ = "..."
locations:
- path: !path 'semgrep-rules/javascript/wkhtmltoimage/security/audit/wkhtmltoimage-injection.yaml'
  keys:
  - wkhtmltoimage-injection.1
- path: !path 'semgrep-rules/javascript/wkhtmltopdf/security/audit/wkhtmltopdf-injection.yaml'
  keys:
  - wkhtmltopdf-injection.1
---
language: !lang 'javascript'
pattern:
  semgrep: $H1.generate("...",...)
  stsearch: $_.generate("..."...)
locations:
- path: !path 'semgrep-rules/javascript/wkhtmltoimage/security/audit/wkhtmltoimage-injection.yaml'
  keys:
  - wkhtmltoimage-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: $H1("...",...)
  stsearch: $_("..."...)
locations:
- path: !path 'semgrep-rules/javascript/wkhtmltopdf/security/audit/wkhtmltopdf-injection.yaml'
  keys:
  - wkhtmltopdf-injection.3
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require('xml2json');
    ...
    $H2.toJson(...);
  stsearch: |-
    var $_ = require('xml2json');
    ...
    $_.toJson(...);
locations:
- path: !path 'semgrep-rules/javascript/xml2json/security/audit/xml2json-xxe.yaml'
  keys:
  - xml2json-xxe.0
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require('xml2json');
    ...
    $H2.toJson("...",...);
  stsearch: |-
    var $_ = require('xml2json');
    ...
    $_.toJson("..."...);
locations:
- path: !path 'semgrep-rules/javascript/xml2json/security/audit/xml2json-xxe.yaml'
  keys:
  - xml2json-xxe.1
---
language: !lang 'javascript'
pattern:
  semgrep: |-
    var $H1 = require('xml2json');
    ...
    var $H2 = "...";
    ...
    $H3.toJson($H4,...);
  stsearch: |-
    var $_ = require('xml2json');
    ...
    var $_ = "...";
    ...
    $_.toJson($_...);
locations:
- path: !path 'semgrep-rules/javascript/xml2json/security/audit/xml2json-xxe.yaml'
  keys:
  - xml2json-xxe.2
